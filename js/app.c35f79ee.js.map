{"version":3,"file":"js/app.c35f79ee.js","mappings":"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","sources":["webpack://observable-sorrow/./src/app/utils/collections.ts","webpack://observable-sorrow/./src/composables/game-endpoint.ts","webpack://observable-sorrow/./src/composables/keyboard-events.ts","webpack://observable-sorrow/./src/app/presenters/_facade.ts","webpack://observable-sorrow/./src/app/state/common/types.ts","webpack://observable-sorrow/./src/app/utils/enumerable.ts","webpack://observable-sorrow/./src/app/state/_facade.ts","webpack://observable-sorrow/./src/app/state/bonfire.ts","webpack://observable-sorrow/./src/app/state/buildings.ts","webpack://observable-sorrow/./src/app/state/crafting.ts","webpack://observable-sorrow/./src/app/state/effects.ts","webpack://observable-sorrow/./src/app/state/effect-styles.ts","webpack://observable-sorrow/./src/app/state/environment.ts","webpack://observable-sorrow/./src/app/state/jobs.ts","webpack://observable-sorrow/./src/app/state/resources.ts","webpack://observable-sorrow/./src/app/state/sections.ts","webpack://observable-sorrow/./src/app/state/techs.ts","webpack://observable-sorrow/./src/app/presenters/common/effects.ts","webpack://observable-sorrow/./src/app/utils/mathx.ts","webpack://observable-sorrow/./src/app/presenters/common/formatter.ts","webpack://observable-sorrow/./src/app/presenters/common/fulfillment.ts","webpack://observable-sorrow/./src/app/presenters/bonfire.ts","webpack://observable-sorrow/./src/app/presenters/environment.ts","webpack://observable-sorrow/./src/app/presenters/formatter.ts","webpack://observable-sorrow/./src/app/presenters/log.ts","webpack://observable-sorrow/./src/app/presenters/player.ts","webpack://observable-sorrow/./src/app/presenters/resources.ts","webpack://observable-sorrow/./src/app/presenters/science.ts","webpack://observable-sorrow/./src/app/presenters/sections.ts","webpack://observable-sorrow/./src/app/presenters/society.ts","webpack://observable-sorrow/./src/app/presenters/common/channel.ts","webpack://observable-sorrow/./src/app/presenters/state-manager.ts","webpack://observable-sorrow/./src/app/store/schemas/v1.ts","webpack://observable-sorrow/./src/app/store/schemas/v2.ts","webpack://observable-sorrow/./src/app/store/schemas/v3.ts","webpack://observable-sorrow/./src/app/store/schemas/v4.ts","webpack://observable-sorrow/./src/app/store/schemas/v5.ts","webpack://observable-sorrow/./src/app/store/schemas/v6.ts","webpack://observable-sorrow/./src/app/store/schemas/index.ts","webpack://observable-sorrow/./src/app/store/db.ts","webpack://observable-sorrow/./src/app/endpoint.ts","webpack://observable-sorrow/./src/App.vue?2a5e","webpack://observable-sorrow/./src/App.vue","webpack://observable-sorrow/./src/plugins/tippy.ts","webpack://observable-sorrow/./src/plugins/vue-i18n.ts","webpack://observable-sorrow/./src/plugins/devtools.ts","webpack://observable-sorrow/./src/main.ts","webpack://observable-sorrow/webpack/bootstrap","webpack://observable-sorrow/webpack/runtime/chunk loaded","webpack://observable-sorrow/webpack/runtime/compat get default export","webpack://observable-sorrow/webpack/runtime/define property getters","webpack://observable-sorrow/webpack/runtime/ensure chunk","webpack://observable-sorrow/webpack/runtime/get javascript chunk filename","webpack://observable-sorrow/webpack/runtime/get mini-css chunk filename","webpack://observable-sorrow/webpack/runtime/global","webpack://observable-sorrow/webpack/runtime/hasOwnProperty shorthand","webpack://observable-sorrow/webpack/runtime/load script","webpack://observable-sorrow/webpack/runtime/make namespace object","webpack://observable-sorrow/webpack/runtime/node module decorator","webpack://observable-sorrow/webpack/runtime/publicPath","webpack://observable-sorrow/webpack/runtime/jsonp chunk loading","webpack://observable-sorrow/webpack/startup"],"sourcesContent":["export function reduce<T, TResult>(\r\n  iterable: Iterable<T>,\r\n  map: (item: T) => TResult,\r\n  reduce: (accumulator: TResult, current: TResult) => TResult,\r\n  initial: TResult,\r\n): TResult {\r\n  let accumulator = initial;\r\n  for (const item of iterable) {\r\n    const mapped = map(item);\r\n    accumulator = reduce(accumulator, mapped);\r\n  }\r\n  return accumulator;\r\n}\r\n\r\n// Returns true iff no provided entries map to false.\r\nexport function all<T>(\r\n  iterable: Iterable<T>,\r\n  map: (item: T) => boolean,\r\n): boolean {\r\n  for (const item of iterable) {\r\n    if (map(item) === false) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// Returns true iff a provided entry maps to true.\r\nexport function any<T>(\r\n  iterable: Iterable<T>,\r\n  map: (item: T) => boolean,\r\n): boolean {\r\n  for (const item of iterable) {\r\n    if (map(item) === true) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// Counts the items that return true for the specified condition.\r\nexport function count<T>(\r\n  iterable: Iterable<T>,\r\n  filter: (item: T) => boolean,\r\n): number {\r\n  let count = 0;\r\n  for (const item of iterable) {\r\n    if (filter(item) === true) {\r\n      count++;\r\n    }\r\n  }\r\n  return count;\r\n}\r\n\r\nexport function getOrAdd<K, V>(\r\n  map: Map<K, V>,\r\n  key: K,\r\n  factory: (key: K) => V,\r\n): V {\r\n  let existing = map.get(key);\r\n  if (existing === undefined) {\r\n    existing = factory(key);\r\n    map.set(key, existing);\r\n  }\r\n  return existing;\r\n}\r\n","import { inject, InjectionKey, Ref } from \"vue\";\r\n\r\nimport { Endpoint } from \"@/app/endpoint\";\r\n\r\nexport const EndpointKey: InjectionKey<Ref<Endpoint>> = Symbol(\"GameEndpoint\");\r\n\r\nexport function useEndpoint<T>(fn: (endpoint: Endpoint) => T): T {\r\n  const ep = inject(EndpointKey);\r\n  if (ep === undefined) {\r\n    throw new Error(\"could not inject endpoint\");\r\n  }\r\n\r\n  return fn(ep.value);\r\n}\r\n","import { InjectionKey, onMounted, onUnmounted, reactive, readonly } from \"vue\";\r\n\r\nexport interface KeyboardEvents {\r\n  ctrl: boolean;\r\n  shift: boolean;\r\n  alt: boolean;\r\n}\r\n\r\nexport const KeyboardEventsKey: InjectionKey<KeyboardEvents> =\r\n  Symbol(\"KeyboardEvents\");\r\n\r\nexport function getKeyboardEvents(): KeyboardEvents {\r\n  const keys = reactive({\r\n    ctrl: false,\r\n    shift: false,\r\n    alt: false,\r\n  });\r\n\r\n  const handler = (event: KeyboardEvent) => {\r\n    keys.ctrl = event.ctrlKey;\r\n    keys.shift = event.shiftKey;\r\n    keys.alt = event.altKey;\r\n  };\r\n  const reset = () => {\r\n    if (document.visibilityState === \"hidden\") {\r\n      keys.ctrl = false;\r\n      keys.shift = false;\r\n      keys.alt = false;\r\n    }\r\n  };\r\n\r\n  onMounted(() => {\r\n    addEventListener(\"keydown\", handler);\r\n    addEventListener(\"keyup\", handler);\r\n    document.addEventListener(\"visibilitychange\", reset);\r\n  });\r\n\r\n  onUnmounted(() => {\r\n    removeEventListener(\"keydown\", handler);\r\n    removeEventListener(\"keyup\", handler);\r\n    document.removeEventListener(\"visibilitychange\", reset);\r\n  });\r\n\r\n  return readonly(keys);\r\n}\r\n","import {\r\n  BonfirePresenter,\r\n  EnvironmentPresenter,\r\n  LogPresenter,\r\n  NumberFormatter,\r\n  PlayerPresenter,\r\n  ResourcesPresenter,\r\n  SciencePresenter,\r\n  SectionsPresenter,\r\n  SocietyPresenter,\r\n  StateManager,\r\n} from \".\";\r\n\r\nexport class PresenterFacade {\r\n  readonly bonfire: BonfirePresenter;\r\n  readonly environment: EnvironmentPresenter;\r\n  readonly formatter: NumberFormatter;\r\n  readonly log: LogPresenter;\r\n  readonly player: PlayerPresenter;\r\n  readonly resources: ResourcesPresenter;\r\n  readonly science: SciencePresenter;\r\n  readonly sections: SectionsPresenter;\r\n  readonly society: SocietyPresenter;\r\n\r\n  constructor(private readonly manager: StateManager) {\r\n    this.bonfire = new BonfirePresenter(this.manager);\r\n    this.environment = new EnvironmentPresenter(this.manager);\r\n    this.log = new LogPresenter(this.manager);\r\n    this.player = new PlayerPresenter(this.manager);\r\n    this.resources = new ResourcesPresenter(this.manager);\r\n    this.science = new SciencePresenter(this.manager);\r\n    this.sections = new SectionsPresenter(this.manager);\r\n    this.society = new SocietyPresenter(this.manager);\r\n\r\n    this.formatter = new NumberFormatter(this.manager, {\r\n      precision: 3,\r\n      units: \"seconds\",\r\n    });\r\n  }\r\n}\r\n","import { ResourceId } from \"@/app/interfaces\";\r\n\r\ntype ResourceQty = [ResourceId, number];\r\n\r\nfunction toIterable(resources: ResourcesType): Iterable<ResourceQty> {\r\n  return Object.entries(resources) as Iterable<ResourceQty>;\r\n}\r\n\r\nexport class ResourceMap extends Map<ResourceId, number> {\r\n  static fromObject(obj: ResourcesType): ResourceMap {\r\n    return new ResourceMap(toIterable(obj));\r\n  }\r\n}\r\n\r\nexport interface IngredientState {\r\n  readonly resourceId: ResourceId;\r\n  requirement: number;\r\n  fulfillmentTime: number | undefined;\r\n  fulfillment: number;\r\n  capped: boolean;\r\n  fulfilled: boolean;\r\n}\r\n\r\nexport interface FulfillmentState {\r\n  readonly ingredients: IngredientState[];\r\n  fulfilled: boolean;\r\n  capped: boolean;\r\n}\r\n\r\nexport function ingredientsFromObject(obj: ResourcesType): IngredientState[] {\r\n  return Array.from(toIterable(obj), ([id, amount]) => ({\r\n    resourceId: id,\r\n    requirement: amount,\r\n    fulfillmentTime: undefined,\r\n    fulfillment: 0,\r\n    capped: false,\r\n    fulfilled: true,\r\n  }));\r\n}\r\n\r\nexport type ResourceQuantityType = {\r\n  readonly id: ResourceId;\r\n  readonly quantity: number;\r\n};\r\n\r\nexport type ResourcesType = Readonly<Partial<Record<ResourceId, number>>>;\r\n","import { all, any, count } from \"./collections\";\r\n\r\nconst TrueFn = (_: unknown) => true;\r\n\r\nexport class Enumerable<T> implements Iterable<T> {\r\n  constructor(private readonly iterator: Iterator<T>) {}\r\n\r\n  [Symbol.iterator](): Iterator<T> {\r\n    return this.iterator;\r\n  }\r\n\r\n  toArray(): T[] {\r\n    return Array.from(this);\r\n  }\r\n\r\n  toMap<K, V>(\r\n    keySelector: (item: T) => K,\r\n    valueSelector: (item: T) => V,\r\n  ): Map<K, V> {\r\n    return new Map<K, V>(this.map((i) => [keySelector(i), valueSelector(i)]));\r\n  }\r\n\r\n  map<TResult>(selector: (item: T) => TResult): Enumerable<TResult> {\r\n    const that = this as Iterable<T>;\r\n    return new Enumerable(\r\n      (function* () {\r\n        for (const item of that) {\r\n          yield selector(item);\r\n        }\r\n      })(),\r\n    );\r\n  }\r\n\r\n  flatMap<TResult>(\r\n    selector: (item: T) => Iterable<TResult>,\r\n  ): Enumerable<TResult> {\r\n    const that = this as Iterable<T>;\r\n    return new Enumerable(\r\n      (function* () {\r\n        for (const outer of that) {\r\n          for (const inner of selector(outer)) {\r\n            yield inner;\r\n          }\r\n        }\r\n      })(),\r\n    );\r\n  }\r\n\r\n  all(selector?: (item: T) => boolean): boolean {\r\n    return all(this, selector ?? TrueFn);\r\n  }\r\n\r\n  any(selector?: (item: T) => boolean): boolean {\r\n    return any(this, selector ?? TrueFn);\r\n  }\r\n\r\n  count(selector?: (item: T) => boolean): number {\r\n    return count(this, selector ?? TrueFn);\r\n  }\r\n\r\n  first(): T {\r\n    for (const item of this.take(1)) {\r\n      return item;\r\n    }\r\n    throw new Error(`Expected at least one item but iterable was empty.`);\r\n  }\r\n\r\n  take(count: number): Enumerable<T> {\r\n    const that = this as Iterable<T>;\r\n    return new Enumerable(\r\n      (function* () {\r\n        let taken = 0;\r\n        for (const item of that) {\r\n          if (taken++ >= count) break;\r\n          yield item;\r\n        }\r\n      })(),\r\n    );\r\n  }\r\n\r\n  filter(selector: (item: T) => boolean): Enumerable<T> {\r\n    const that = this as Iterable<T>;\r\n    return new Enumerable(\r\n      (function* () {\r\n        for (const item of that) {\r\n          if (selector(item)) {\r\n            yield item;\r\n          }\r\n        }\r\n      })(),\r\n    );\r\n  }\r\n\r\n  defined(): Enumerable<Exclude<T, undefined>> {\r\n    const that = this as Iterable<T>;\r\n    return new Enumerable(\r\n      (function* () {\r\n        for (const item of that) {\r\n          if (item !== undefined) {\r\n            yield item as Exclude<T, undefined>;\r\n          }\r\n        }\r\n      })(),\r\n    );\r\n  }\r\n\r\n  reduce<TResult>(\r\n    seed: TResult,\r\n    accumulator: (acc: TResult, value: T) => TResult,\r\n  ): TResult {\r\n    let accumulate = seed;\r\n    for (const source of this) {\r\n      accumulate = accumulator(accumulate, source);\r\n    }\r\n    return accumulate;\r\n  }\r\n}\r\n\r\nexport function asEnumerable<T>(iterable: Iterable<T>): Enumerable<T> {\r\n  function* iterator() {\r\n    for (const item of iterable) {\r\n      yield item;\r\n    }\r\n  }\r\n\r\n  return new Enumerable(iterator());\r\n}\r\n\r\nexport function fromObject<K extends string, V>(\r\n  o: Record<string, unknown>,\r\n): Enumerable<[K, V]> {\r\n  return asEnumerable(Object.entries(o)).map(([k, v]) => [k as K, v as V]);\r\n}\r\n","import {\r\n  BuildingId,\r\n  JobId,\r\n  NumberEffectId,\r\n  ResourceId,\r\n  SeasonId,\r\n  SectionId,\r\n  TechId,\r\n  WeatherId,\r\n} from \"@/app/interfaces\";\r\nimport {\r\n  BonfireItemId,\r\n  BonfireItems,\r\n  BuildingMetadata,\r\n  BuildingMetadataType,\r\n  EffectDisplayStyles,\r\n  JobMetadata,\r\n  JobMetadataType,\r\n  EffectDisplayStyle,\r\n  RecipeMetadata,\r\n  RecipeMetadataType,\r\n  ResourceMetadata,\r\n  ResourceMetadataType,\r\n  SeasonMetadataType,\r\n  SeasonsMetadata,\r\n  SectionMetadataType,\r\n  SectionsMetadata,\r\n  TechMetadata,\r\n  TechMetadataType,\r\n  WeatherMetadata,\r\n  WeatherMetadataType,\r\n} from \"@/app/state\";\r\nimport { asEnumerable, Enumerable } from \"@/app/utils/enumerable\";\r\n\r\nexport const Meta = {\r\n  bonfireItems(): Enumerable<BonfireItemId> {\r\n    return asEnumerable(BonfireItems);\r\n  },\r\n\r\n  buildings(): Enumerable<BuildingMetadataType> {\r\n    return asEnumerable(Object.values(BuildingMetadata));\r\n  },\r\n\r\n  building(id: BuildingId): BuildingMetadataType {\r\n    return BuildingMetadata[id];\r\n  },\r\n\r\n  effectDisplay(id: NumberEffectId): EffectDisplayStyle {\r\n    return EffectDisplayStyles[id];\r\n  },\r\n\r\n  jobs(): Enumerable<JobMetadataType> {\r\n    return asEnumerable(Object.values(JobMetadata));\r\n  },\r\n\r\n  job(id: JobId): JobMetadataType {\r\n    return JobMetadata[id];\r\n  },\r\n\r\n  recipes(): Enumerable<RecipeMetadataType> {\r\n    return asEnumerable(Object.values(RecipeMetadata));\r\n  },\r\n\r\n  resources(): Enumerable<ResourceMetadataType> {\r\n    return asEnumerable(Object.values(ResourceMetadata));\r\n  },\r\n\r\n  resource(id: ResourceId): ResourceMetadataType {\r\n    return ResourceMetadata[id];\r\n  },\r\n\r\n  season(id: SeasonId): SeasonMetadataType {\r\n    return SeasonsMetadata[id];\r\n  },\r\n\r\n  sections(): Enumerable<SectionMetadataType> {\r\n    return asEnumerable(Object.values(SectionsMetadata));\r\n  },\r\n\r\n  section(id: SectionId): SectionMetadataType {\r\n    return SectionsMetadata[id];\r\n  },\r\n\r\n  techs(): Enumerable<TechMetadataType> {\r\n    return asEnumerable(Object.values(TechMetadata));\r\n  },\r\n\r\n  tech(id: TechId): TechMetadataType {\r\n    return TechMetadata[id];\r\n  },\r\n\r\n  weather(id: WeatherId): WeatherMetadataType {\r\n    return WeatherMetadata[id];\r\n  },\r\n};\r\n","export type BonfireBuildingId =\r\n  | \"catnip-field\"\r\n  | \"hut\"\r\n  | \"library\"\r\n  | \"barn\"\r\n  | \"mine\";\r\n\r\nexport type BonfireItemId =\r\n  | \"gather-catnip\"\r\n  | \"refine-catnip\"\r\n  | BonfireBuildingId;\r\n\r\nexport const BonfireItems: BonfireItemId[] = [\r\n  \"gather-catnip\",\r\n  \"refine-catnip\",\r\n  \"catnip-field\",\r\n  \"hut\",\r\n  \"library\",\r\n  \"barn\",\r\n  \"mine\",\r\n];\r\n","import {\r\n  NumberEffectId,\r\n  BuildingId,\r\n  BuildingUnlockEffectId,\r\n} from \"@/app/interfaces\";\r\n\r\nimport { ResourcesType } from \"./common/types\";\r\n\r\nexport type BuildingEffectType = Readonly<{\r\n  /** A unique key for the effect. */\r\n  id: string;\r\n  /** The name of the 'per-level' effect for the building. */\r\n  per: NumberEffectId;\r\n  /** The name of the 'total' effect for the building. */\r\n  total: NumberEffectId;\r\n  /** The label for the effect. */\r\n  label: string;\r\n}>;\r\n\r\ntype BuildingPricesType = Readonly<{\r\n  /** Every level of the building will increase the ingredient requirements by this many times. */\r\n  ratio: number;\r\n  /** The ingredients required to build the first level of the building. */\r\n  base: ResourcesType;\r\n}>;\r\n\r\nexport type BuildingMetadataType = Readonly<{\r\n  id: BuildingId;\r\n  label: string;\r\n  description: string;\r\n  flavor?: string;\r\n\r\n  /** Unlock requirements for the building. */\r\n  unlock?: BuildingUnlockType;\r\n  /** Price definition for the building. */\r\n  prices: BuildingPricesType;\r\n  /** List of the effects of the building. */\r\n  effects: BuildingEffectType[];\r\n}>;\r\n\r\nexport type BuildingUnlockType = Readonly<{\r\n  /** Until this effect is satisfied, the building will remain locked. */\r\n  unlockEffect?: BuildingUnlockEffectId;\r\n  /** When an ingredient resource reaches this fraction of its requirement, the building is unlocked. */\r\n  priceRatio?: number;\r\n}>;\r\n\r\nexport const BuildingMetadata: Record<BuildingId, BuildingMetadataType> = {\r\n  \"catnip-field\": {\r\n    id: \"catnip-field\",\r\n    label: \"buildings.catnip-field.label\",\r\n    description: \"buildings.catnip-field.description\",\r\n    flavor: \"buildings.catnip-field.flavor\",\r\n    prices: {\r\n      ratio: 1.12,\r\n      base: { catnip: 10 },\r\n    },\r\n    unlock: { priceRatio: 0.3 },\r\n    effects: [\r\n      {\r\n        id: \"catnip\",\r\n        per: \"catnip-field.catnip.base\",\r\n        total: \"catnip-field.catnip\",\r\n        label: \"buildings.catnip-field.effects.catnip\",\r\n      },\r\n    ],\r\n  },\r\n  hut: {\r\n    id: \"hut\",\r\n    label: \"buildings.hut.label\",\r\n    description: \"buildings.hut.description\",\r\n    flavor: \"buildings.hut.flavor\",\r\n    prices: {\r\n      ratio: 2.5,\r\n      base: { wood: 5 },\r\n    },\r\n    unlock: { priceRatio: 0.3 },\r\n    effects: [\r\n      {\r\n        id: \"kittens-limit\",\r\n        per: \"hut.kittens-limit.base\",\r\n        total: \"hut.kittens-limit\",\r\n        label: \"buildings.hut.effects.kittens-limit\",\r\n      },\r\n      {\r\n        id: \"catpower-limit\",\r\n        per: \"hut.catpower-limit.base\",\r\n        total: \"hut.catpower-limit\",\r\n        label: \"buildings.hut.effects.catpower-limit\",\r\n      },\r\n    ],\r\n  },\r\n  library: {\r\n    id: \"library\",\r\n    label: \"buildings.library.label\",\r\n    description: \"buildings.library.description\",\r\n    flavor: \"buildings.library.flavor\",\r\n    prices: {\r\n      base: { wood: 25 },\r\n      ratio: 1.15,\r\n    },\r\n    unlock: { priceRatio: 0.3 },\r\n    effects: [\r\n      {\r\n        id: \"science-limit\",\r\n        per: \"library.science-limit.base\",\r\n        total: \"library.science-limit\",\r\n        label: \"buildings.library.effects.science-limit\",\r\n      },\r\n      {\r\n        id: \"science-ratio\",\r\n        per: \"library.science-ratio.base\",\r\n        total: \"library.science-ratio\",\r\n        label: \"buildings.library.effects.science-ratio\",\r\n      },\r\n    ],\r\n  },\r\n  barn: {\r\n    id: \"barn\",\r\n    label: \"buildings.barn.label\",\r\n    description: \"buildings.barn.description\",\r\n    flavor: \"buildings.barn.flavor\",\r\n    unlock: {\r\n      priceRatio: 0.3,\r\n      unlockEffect: \"unlock.building.barn\",\r\n    },\r\n    prices: {\r\n      base: { wood: 50 },\r\n      ratio: 1.75,\r\n    },\r\n    effects: [\r\n      {\r\n        id: \"catnip-limit\",\r\n        per: \"barn.catnip-limit.base\",\r\n        total: \"barn.catnip-limit\",\r\n        label: \"buildings.barn.effects.catnip-limit\",\r\n      },\r\n      {\r\n        id: \"wood-limit\",\r\n        per: \"barn.wood-limit.base\",\r\n        total: \"barn.wood-limit\",\r\n        label: \"buildings.barn.effects.wood-limit\",\r\n      },\r\n      {\r\n        id: \"minerals-limit\",\r\n        per: \"barn.minerals-limit.base\",\r\n        total: \"barn.minerals-limit\",\r\n        label: \"buildings.barn.effects.minerals-limit\",\r\n      },\r\n    ],\r\n  },\r\n  mine: {\r\n    id: \"mine\",\r\n    label: \"buildings.mine.label\",\r\n    description: \"buildings.mine.description\",\r\n    flavor: \"buildings.mine.flavor\",\r\n    unlock: {\r\n      priceRatio: 0.15,\r\n      unlockEffect: \"unlock.building.mine\",\r\n    },\r\n    prices: {\r\n      base: { wood: 100 },\r\n      ratio: 1.15,\r\n    },\r\n    effects: [\r\n      {\r\n        id: \"mineral-ratio\",\r\n        per: \"mine.minerals-ratio.base\",\r\n        total: \"mine.minerals-ratio\",\r\n        label: \"buildings.mine.effects.minerals-ratio\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport interface BuildingState {\r\n  /** Whether the building is unlocked or not. */\r\n  unlocked: boolean;\r\n  /** The level of the building. */\r\n  level: number;\r\n}\r\n","import { RecipeId } from \"@/app/interfaces\";\r\nimport { ResourceMap, ResourcesType } from \"@/app/state\";\r\n\r\nexport type RecipeMetadataType = Readonly<{\r\n  id: RecipeId;\r\n  /** The ingredients for crafting this recipe. */\r\n  ingredients: ResourcesType;\r\n  /** The resources produced by crafting this recipe. */\r\n  products: ResourcesType;\r\n}>;\r\n\r\nexport const RecipeMetadata: Record<RecipeId, RecipeMetadataType> = {\r\n  \"refine-catnip\": {\r\n    id: \"refine-catnip\",\r\n    ingredients: { catnip: 100 },\r\n    products: { wood: 1 },\r\n  },\r\n};\r\n\r\nexport interface RecipeState {\r\n  readonly products: ResourceMap;\r\n}\r\n","import { NumberEffectId } from \"@/app/interfaces\";\r\n\r\nexport type EffectState<T> = { value: T | undefined };\r\n\r\nexport class EffectTreeState extends Map<NumberEffectId, Set<NumberEffectId>> {}\r\n","import { NumberEffectId } from \"../interfaces\";\r\n\r\nexport enum UnitKind {\r\n  None,\r\n  Tick,\r\n  PerTick,\r\n  Percent,\r\n}\r\n\r\ntype EffectStyleDisposition = \"none\" | \"hide\" | \"inline\" | \"collapse\";\r\n\r\nexport type EffectDisplayStyle = Readonly<{\r\n  unit: UnitKind;\r\n  invert?: boolean;\r\n  label?: string;\r\n  disposition?: EffectStyleDisposition;\r\n}>;\r\n\r\nexport const EffectDisplayStyles: Record<NumberEffectId, EffectDisplayStyle> = {\r\n  // ----------------\r\n  // Deltas\r\n  // ----------------\r\n\r\n  // Catnip\r\n  \"catnip.delta\": perTick(\"inline\"),\r\n  \"catnip.production\": perTick(\"inline\"),\r\n  \"catnip-field.catnip\": {\r\n    ...perTick(\"collapse\"),\r\n    label: \"effect-tree.catnip-fields\",\r\n  },\r\n  \"catnip-field.catnip.base\": perTick(),\r\n  \"weather.ratio\": { ...percent(\"collapse\"), label: \"effect-tree.weather\" },\r\n  \"weather.season-ratio\": percent(),\r\n  \"weather.severity-ratio\": percent(),\r\n  \"jobs.farmer.catnip\": {\r\n    ...perTick(\"collapse\"),\r\n    label: \"effect-tree.farming\",\r\n  },\r\n  \"jobs.farmer.catnip.base\": perTick(),\r\n  \"population.catnip-demand\": {\r\n    ...perTick(\"collapse\"),\r\n    label: \"effect-tree.village-demand\",\r\n    invert: true,\r\n  },\r\n  \"population.catnip-demand.base\": { ...perTick(), invert: true },\r\n\r\n  // Wood\r\n  \"wood.delta\": perTick(\"inline\"),\r\n  \"wood.production\": perTick(\"inline\"),\r\n  \"jobs.woodcutter.wood\": {\r\n    ...perTick(\"collapse\"),\r\n    label: \"effect-tree.woodcutting\",\r\n  },\r\n  \"jobs.woodcutter.wood.base\": perTick(),\r\n\r\n  // Minerals\r\n  \"minerals.delta\": perTick(\"inline\"),\r\n  \"minerals.production\": perTick(\"inline\"),\r\n  \"jobs.miner.minerals\": {\r\n    ...perTick(\"collapse\"),\r\n    label: \"effect-tree.mining\",\r\n  },\r\n  \"jobs.miner.minerals.base\": perTick(),\r\n  \"minerals.ratio\": { ...percent(\"collapse\"), label: \"effect-tree.bonus\" },\r\n  \"mine.minerals-ratio\": percent(),\r\n  \"mine.minerals-ratio.base\": percent(),\r\n\r\n  // Science\r\n  \"science.delta\": perTick(\"inline\"),\r\n  \"science.production\": perTick(\"inline\"),\r\n  \"jobs.scholar.science\": {\r\n    ...perTick(\"collapse\"),\r\n    label: \"effect-tree.researching\",\r\n  },\r\n  \"jobs.scholar.science.base\": perTick(),\r\n  \"science.ratio\": { ...percent(\"collapse\"), label: \"effect-tree.bonus\" },\r\n  \"library.science-ratio\": percent(),\r\n  \"library.science-ratio.base\": percent(),\r\n  // Astronomy\r\n  \"astronomy.rare-event.reward\": noUnit(),\r\n  \"astronomy.rare-event.reward.base\": noUnit(),\r\n\r\n  // Catpower\r\n  \"catpower.delta\": perTick(\"inline\"),\r\n  \"catpower.production\": perTick(\"inline\"),\r\n  \"jobs.hunter.catpower.base\": perTick(),\r\n  \"jobs.hunter.catpower\": perTick(),\r\n\r\n  // Happiness\r\n  \"population.happiness.total\": percent(\"collapse\"),\r\n  \"population.happiness.base\": {\r\n    ...percent(),\r\n    label: \"effect-tree.base\",\r\n  },\r\n  \"population.overpopulation\": {\r\n    ...percent(\"collapse\"),\r\n    label: \"effect-tree.overpopulation\",\r\n  },\r\n  \"population.overpopulation.base\": percent(),\r\n  \"population.overpopulation.severity\": percent(),\r\n\r\n  // ----------------\r\n  // Limits\r\n  // ----------------\r\n\r\n  // Catnip\r\n  \"catnip.limit\": noUnit(\"inline\"),\r\n  \"catnip.limit.base\": noUnit(),\r\n  \"barn.catnip-limit\": noUnit(\"inline\"),\r\n  \"barn.catnip-limit.base\": noUnit(),\r\n\r\n  // Wood\r\n  \"wood.limit\": noUnit(\"inline\"),\r\n  \"wood.limit.base\": noUnit(),\r\n  \"barn.wood-limit\": noUnit(\"inline\"),\r\n  \"barn.wood-limit.base\": noUnit(),\r\n\r\n  // Minerals\r\n  \"minerals.limit\": noUnit(\"inline\"),\r\n  \"minerals.limit.base\": noUnit(),\r\n  \"barn.minerals-limit\": noUnit(\"inline\"),\r\n  \"barn.minerals-limit.base\": noUnit(),\r\n\r\n  // Science\r\n  \"science.limit\": noUnit(\"inline\"),\r\n  \"library.science-limit\": noUnit(\"collapse\"),\r\n  \"library.science-limit.base\": noUnit(),\r\n\r\n  // Catpower\r\n  \"catpower.limit\": noUnit(\"inline\"),\r\n  \"catpower.limit.base\": noUnit(),\r\n  \"hut.catpower-limit\": noUnit(\"collapse\"),\r\n  \"hut.catpower-limit.base\": noUnit(),\r\n\r\n  // Kittens\r\n  \"kittens.limit\": noUnit(\"inline\"),\r\n  \"hut.kittens-limit\": noUnit(\"collapse\"),\r\n  \"hut.kittens-limit.base\": noUnit(),\r\n};\r\n\r\nfunction noUnit(disposition?: EffectStyleDisposition): EffectDisplayStyle {\r\n  if (disposition) {\r\n    return { unit: UnitKind.None, disposition };\r\n  } else {\r\n    return { unit: UnitKind.None };\r\n  }\r\n}\r\n\r\nfunction perTick(disposition?: EffectStyleDisposition): EffectDisplayStyle {\r\n  if (disposition) return { unit: UnitKind.PerTick, disposition };\r\n  else return { unit: UnitKind.PerTick };\r\n}\r\n\r\nfunction percent(disposition?: EffectStyleDisposition): EffectDisplayStyle {\r\n  if (disposition) return { unit: UnitKind.Percent, disposition };\r\n  else return { unit: UnitKind.Percent };\r\n}\r\n","import { SeasonId, WeatherId } from \"@/app/interfaces\";\r\n\r\nexport type SeasonMetadataType = Readonly<{\r\n  id: SeasonId;\r\n  label: string;\r\n}>;\r\n\r\nexport const SeasonsMetadata: Record<SeasonId, SeasonMetadataType> = {\r\n  spring: {\r\n    id: \"spring\",\r\n    label: \"environment.seasons.spring.label\",\r\n  },\r\n  summer: {\r\n    id: \"summer\",\r\n    label: \"environment.seasons.summer.label\",\r\n  },\r\n  autumn: {\r\n    id: \"autumn\",\r\n    label: \"environment.seasons.autumn.label\",\r\n  },\r\n  winter: {\r\n    id: \"winter\",\r\n    label: \"environment.seasons.winter.label\",\r\n  },\r\n};\r\n\r\nexport type WeatherMetadataType = Readonly<{\r\n  id: WeatherId;\r\n  label?: string;\r\n}>;\r\n\r\nexport const WeatherMetadata: Record<WeatherId, WeatherMetadataType> = {\r\n  neutral: {\r\n    id: \"neutral\",\r\n  },\r\n  warm: {\r\n    id: \"warm\",\r\n    label: \"environment.weather.warm\",\r\n  },\r\n  cold: {\r\n    id: \"cold\",\r\n    label: \"environment.weather.cold\",\r\n  },\r\n};\r\n\r\nexport interface EnvironmentState {\r\n  year: number;\r\n  season: SeasonId;\r\n  day: number;\r\n  weather: WeatherId;\r\n  calendarLabel: string;\r\n  epochLabel: string;\r\n}\r\n","import { JobEffectId, JobId, JobUnlockEffectId } from \"../interfaces\";\r\n\r\nexport type JobEffectType = Readonly<{\r\n  id: string;\r\n  label: string;\r\n  base: JobEffectId;\r\n  total: JobEffectId;\r\n}>;\r\n\r\nexport type JobMetadataType = Readonly<{\r\n  id: JobId;\r\n  label: string;\r\n  description: string;\r\n  flavor?: string;\r\n  unlockEffect?: JobUnlockEffectId;\r\n  effects: JobEffectType[];\r\n}>;\r\n\r\nexport const JobMetadata: Record<JobId, JobMetadataType> = {\r\n  woodcutter: {\r\n    id: \"woodcutter\",\r\n    label: \"jobs.woodcutter.label\",\r\n    description: \"jobs.woodcutter.description\",\r\n    flavor: \"jobs.woodcutter.flavor\",\r\n    effects: [\r\n      {\r\n        id: \"wood\",\r\n        label: \"jobs.woodcutter.effects.wood\",\r\n        base: \"jobs.woodcutter.wood.base\",\r\n        total: \"jobs.woodcutter.wood\",\r\n      },\r\n    ],\r\n  },\r\n  farmer: {\r\n    id: \"farmer\",\r\n    label: \"jobs.farmer.label\",\r\n    description: \"jobs.farmer.description\",\r\n    unlockEffect: \"unlock.job.farmer\",\r\n    effects: [\r\n      {\r\n        id: \"catnip\",\r\n        label: \"jobs.farmer.effects.catnip\",\r\n        base: \"jobs.farmer.catnip.base\",\r\n        total: \"jobs.farmer.catnip\",\r\n      },\r\n    ],\r\n  },\r\n  scholar: {\r\n    id: \"scholar\",\r\n    label: \"jobs.scholar.label\",\r\n    description: \"jobs.scholar.description\",\r\n    unlockEffect: \"unlock.job.scholar\",\r\n    effects: [\r\n      {\r\n        id: \"science\",\r\n        label: \"jobs.scholar.effects.science\",\r\n        base: \"jobs.scholar.science.base\",\r\n        total: \"jobs.scholar.science\",\r\n      },\r\n    ],\r\n  },\r\n  hunter: {\r\n    id: \"hunter\",\r\n    label: \"jobs.hunter.label\",\r\n    description: \"jobs.hunter.description\",\r\n    unlockEffect: \"unlock.job.hunter\",\r\n    effects: [\r\n      {\r\n        id: \"catpower\",\r\n        label: \"jobs.hunter.effects.catpower\",\r\n        base: \"jobs.hunter.catpower.base\",\r\n        total: \"jobs.hunter.catpower\",\r\n      },\r\n    ],\r\n  },\r\n  miner: {\r\n    id: \"miner\",\r\n    label: \"jobs.miner.label\",\r\n    description: \"jobs.miner.description\",\r\n    flavor: \"jobs.miner.flavor\",\r\n    unlockEffect: \"unlock.job.miner\",\r\n    effects: [\r\n      {\r\n        id: \"minerals\",\r\n        label: \"jobs.miner.effects.minerals\",\r\n        base: \"jobs.miner.minerals.base\",\r\n        total: \"jobs.miner.minerals\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import { ResourceId, DeltaEffectId, LimitEffectId } from \"@/app/interfaces\";\r\n\r\nexport enum UnlockMode {\r\n  FirstQuantity = 0,\r\n  FirstCapacity = 1,\r\n}\r\n\r\ntype ResourceEffectsType = Readonly<{\r\n  delta?: DeltaEffectId;\r\n  limit?: LimitEffectId;\r\n}>;\r\n\r\nexport type ResourceMetadataType = Readonly<{\r\n  id: ResourceId;\r\n  label: string;\r\n  unlockMode?: UnlockMode;\r\n  effects: ResourceEffectsType;\r\n}>;\r\n\r\nexport const ResourceMetadata: Record<ResourceId, ResourceMetadataType> = {\r\n  catnip: {\r\n    id: \"catnip\",\r\n    label: \"resources.catnip.label\",\r\n    effects: {\r\n      delta: \"catnip.delta\",\r\n      limit: \"catnip.limit\",\r\n    },\r\n  },\r\n  wood: {\r\n    id: \"wood\",\r\n    label: \"resources.wood.label\",\r\n    effects: {\r\n      limit: \"wood.limit\",\r\n      delta: \"wood.delta\",\r\n    },\r\n  },\r\n  minerals: {\r\n    id: \"minerals\",\r\n    label: \"resources.minerals.label\",\r\n    effects: {\r\n      limit: \"minerals.limit\",\r\n      delta: \"minerals.delta\",\r\n    },\r\n  },\r\n  catpower: {\r\n    id: \"catpower\",\r\n    label: \"resources.catpower.label\",\r\n    effects: {\r\n      delta: \"catpower.delta\",\r\n      limit: \"catpower.limit\",\r\n    },\r\n  },\r\n  science: {\r\n    id: \"science\",\r\n    label: \"resources.science.label\",\r\n    effects: {\r\n      delta: \"science.delta\",\r\n      limit: \"science.limit\",\r\n    },\r\n  },\r\n  kittens: {\r\n    id: \"kittens\",\r\n    label: \"resources.kittens.label\",\r\n    unlockMode: UnlockMode.FirstCapacity,\r\n    effects: {\r\n      limit: \"kittens.limit\",\r\n    },\r\n  },\r\n};\r\n\r\nexport interface ResourceState {\r\n  unlocked: boolean;\r\n  amount: number;\r\n  change: number;\r\n  capacity: number | undefined;\r\n}\r\n","import { SectionId, SectionUnlockEffectId } from \"@/app/interfaces\";\r\n\r\nexport type SectionMetadataType = Readonly<{\r\n  id: SectionId;\r\n  parent?: SectionId;\r\n  label: string;\r\n  unlockEffect?: SectionUnlockEffectId;\r\n}>;\r\n\r\nexport const SectionsMetadata: Record<SectionId, SectionMetadataType> = {\r\n  bonfire: {\r\n    id: \"bonfire\",\r\n    label: \"sections.bonfire.label\",\r\n  },\r\n  society: {\r\n    id: \"society\",\r\n    label: \"sections.society.label\",\r\n    unlockEffect: \"unlock.section.society\",\r\n  },\r\n  jobs: {\r\n    id: \"jobs\",\r\n    parent: \"society\",\r\n    label: \"sections.jobs.label\",\r\n  },\r\n  management: {\r\n    id: \"management\",\r\n    parent: \"society\",\r\n    label: \"sections.management.label\",\r\n    unlockEffect: \"unlock.section.management\",\r\n  },\r\n  science: {\r\n    id: \"science\",\r\n    label: \"sections.science.label\",\r\n    unlockEffect: \"unlock.section.science\",\r\n  },\r\n  technologies: {\r\n    id: \"technologies\",\r\n    parent: \"science\",\r\n    label: \"sections.technologies.label\",\r\n  },\r\n};\r\n\r\nexport interface SectionState {\r\n  unlocked: boolean;\r\n  label: string;\r\n  alert: string | undefined;\r\n}\r\n","import { ResourcesType } from \".\";\r\nimport { TechId } from \"../interfaces\";\r\n\r\nexport type TechMetadataType = Readonly<{\r\n  id: TechId;\r\n  label: string;\r\n  description: string;\r\n  flavor?: string;\r\n  ingredients: ResourcesType;\r\n  effects: TechEffectType[];\r\n  dependsOn: TechId[];\r\n}>;\r\n\r\nexport type TechEffectType = Readonly<{\r\n  id: string;\r\n  label: string;\r\n}>;\r\n\r\nexport const TechMetadata: Record<TechId, TechMetadataType> = {\r\n  calendar: {\r\n    id: \"calendar\",\r\n    label: \"tech.calendar.label\",\r\n    description: \"tech.calendar.description\",\r\n    flavor: \"tech.calendar.flavor\",\r\n    ingredients: { science: 30 },\r\n    effects: [{ id: \"default\", label: \"tech.calendar.effect\" }],\r\n    dependsOn: [],\r\n  },\r\n  agriculture: {\r\n    id: \"agriculture\",\r\n    label: \"tech.agriculture.label\",\r\n    description: \"tech.agriculture.description\",\r\n    flavor: \"tech.agriculture.flavor\",\r\n    ingredients: { science: 100 },\r\n    effects: [{ id: \"default\", label: \"tech.agriculture.effect\" }],\r\n    dependsOn: [\"calendar\"],\r\n  },\r\n  archery: {\r\n    id: \"archery\",\r\n    label: \"tech.archery.label\",\r\n    description: \"tech.archery.description\",\r\n    flavor: \"tech.archery.flavor\",\r\n    ingredients: { science: 300 },\r\n    effects: [{ id: \"default\", label: \"tech.archery.effect\" }],\r\n    dependsOn: [\"agriculture\"],\r\n  },\r\n  mining: {\r\n    id: \"mining\",\r\n    label: \"tech.mining.label\",\r\n    description: \"tech.mining.description\",\r\n    flavor: \"tech.mining.flavor\",\r\n    ingredients: { science: 500 },\r\n    effects: [{ id: \"default\", label: \"tech.mining.effect\" }],\r\n    dependsOn: [\"agriculture\"],\r\n  },\r\n};\r\n\r\nexport interface TechState {\r\n  unlocked: boolean;\r\n  researched: boolean;\r\n}\r\n","import { computed, reactive } from \"vue\";\r\n\r\nimport { NumberEffectId } from \"@/app/interfaces\";\r\nimport { Meta } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \"..\";\r\nimport { NumberView, numberView } from \".\";\r\n\r\nexport interface EffectItem {\r\n  id: string;\r\n  label: string;\r\n  singleAmount: NumberView | undefined;\r\n  totalAmount: NumberView | undefined;\r\n}\r\n\r\nexport interface EffectTree {\r\n  nodes: EffectTreeNode[];\r\n}\r\n\r\nexport interface EffectTreeNode {\r\n  id: NumberEffectId;\r\n  value: NumberView | undefined;\r\n  label?: string;\r\n  nodes: EffectTreeNode[];\r\n}\r\n\r\nexport function effectTree(\r\n  id: NumberEffectId,\r\n  manager: IStateManager,\r\n): EffectTree {\r\n  return reactive({\r\n    nodes: computed(() => Array.from(collectEffectNodes(id, manager))),\r\n  });\r\n}\r\n\r\nfunction* collectEffectNodes(\r\n  id: NumberEffectId,\r\n  manager: IStateManager,\r\n): Iterable<EffectTreeNode> {\r\n  const children = manager.effectTree().get(id) ?? [];\r\n  for (const child of children) {\r\n    const style = Meta.effectDisplay(child);\r\n    switch (style.disposition) {\r\n      case \"hide\":\r\n        // completely ignore hidden children\r\n        continue;\r\n      case \"inline\":\r\n        // treat children-of-child as direct children\r\n        yield* collectEffectNodes(child, manager);\r\n        continue;\r\n\r\n      default:\r\n        yield reactive({\r\n          id: child,\r\n          label: style.label,\r\n          value: computed(() => numberView(manager, child)),\r\n          // Don't collect children of collapsed nodes\r\n          nodes:\r\n            style.disposition === \"collapse\"\r\n              ? []\r\n              : Array.from(collectEffectNodes(child, manager)),\r\n        });\r\n    }\r\n  }\r\n}\r\n","export function round(num: number, precision = 0): number {\r\n  return rounded(num, precision, Math.round);\r\n}\r\n\r\nexport function trunc(num: number, precision = 0): number {\r\n  return rounded(num, precision, Math.trunc);\r\n}\r\n\r\nfunction rounded(\r\n  num: number,\r\n  precision: number,\r\n  fn: (n: number) => number,\r\n): number {\r\n  const scale = Math.pow(10, precision);\r\n  const scaledNumber = num * scale;\r\n  const epsilonCorrected = scaledNumber * (1 + Number.EPSILON);\r\n  return fn(epsilonCorrected) / scale;\r\n}\r\n\r\nexport type Prng = {\r\n  state(): number;\r\n  next(): number;\r\n  fork(): Prng;\r\n};\r\n\r\nexport function random(seed: number): Prng {\r\n  let state = seed;\r\n\r\n  // https://stackoverflow.com/a/47593316/586472\r\n  function mulberry32() {\r\n    let t = (state += 0x6d2b79f5);\r\n    t = Math.imul(t ^ (t >>> 15), t | 1);\r\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\r\n    return ((t ^ (t >>> 14)) >>> 0) / 4294967296;\r\n  }\r\n\r\n  return {\r\n    state: () => state,\r\n    next: () => mulberry32(),\r\n    fork: () => random(mulberry32()),\r\n  };\r\n}\r\n","import { NumberEffectId, ShowSign } from \"@/app/interfaces\";\r\nimport {\r\n  EffectDisplayStyle,\r\n  EffectDisplayStyles,\r\n  EffectState,\r\n} from \"@/app/state\";\r\nimport { round } from \"@/app/utils/mathx\";\r\n\r\nfunction scale(limit: number, divisor: number, postfix: string) {\r\n  return { limit, divisor, postfix };\r\n}\r\n\r\n// almost shamelessly copied from Sandcastle Builder\r\n// https://github.com/eternaldensity/Sandcastle-Builder/blob/master/redundancy.js\r\nconst scales = [\r\n  scale(1e210, 1e210, \"Q\"),\r\n  scale(1e42, 1e42, \"W\"),\r\n  scale(1e39, 1e39, \"L\"),\r\n  scale(1e36, 1e36, \"F\"),\r\n  scale(1e33, 1e33, \"H\"),\r\n  scale(1e30, 1e30, \"S\"),\r\n  scale(1e27, 1e27, \"U\"),\r\n  scale(1e24, 1e24, \"Y\"),\r\n  scale(1e21, 1e21, \"Z\"),\r\n  scale(1e18, 1e18, \"E\"),\r\n  scale(1e15, 1e15, \"P\"),\r\n  scale(1e12, 1e12, \"T\"),\r\n  scale(1e9, 1e9, \"G\"),\r\n  scale(1e6, 1e6, \"M\"),\r\n\r\n  // start displaying K only when we're almost at 5 digits.\r\n  scale(9e3, 1e3, \"K\"),\r\n];\r\n\r\nfunction getSignString(value: number, showSign: ShowSign): string {\r\n  const sign = Math.sign(value);\r\n  switch (showSign) {\r\n    case \"negative\":\r\n      if (sign < 0) return \"-\";\r\n      break;\r\n\r\n    case \"always\":\r\n      if (sign >= 0) return \"+\";\r\n      if (sign < 0) return \"-\";\r\n      break;\r\n  }\r\n\r\n  return \"\";\r\n}\r\n\r\nfunction getValueString(value: number, precision: number): string {\r\n  let postfix = \"\";\r\n\r\n  for (const scale of scales) {\r\n    const rounded = round(value, precision);\r\n    // at the high end of double, round() will return infinity\r\n    // if this happens, ignore the rounding operation for this scale\r\n    if (Number.isFinite(rounded)) {\r\n      value = rounded;\r\n    }\r\n    while (value + Number.EPSILON >= scale.limit) {\r\n      postfix = scale.postfix + postfix;\r\n      value /= scale.divisor;\r\n    }\r\n  }\r\n\r\n  value = round(value, precision);\r\n\r\n  const valueString = Number.isInteger(value)\r\n    ? value.toFixed(0)\r\n    : value.toFixed(precision);\r\n\r\n  return valueString + postfix;\r\n}\r\n\r\nexport const SandcastleBuilderFormatter = (\r\n  value: number,\r\n  precision: number,\r\n  showSign: ShowSign,\r\n): string => {\r\n  const signString = getSignString(value, showSign);\r\n  let valueString: string;\r\n  if (Number.isFinite(value)) {\r\n    const absValue = Math.abs(value);\r\n    valueString = getValueString(absValue, precision);\r\n  } else {\r\n    valueString = Number.POSITIVE_INFINITY.toString();\r\n  }\r\n\r\n  return signString + valueString;\r\n};\r\n\r\nexport interface NumberView {\r\n  value: number | undefined;\r\n  style: EffectDisplayStyle;\r\n  rounded?: boolean;\r\n  showSign?: ShowSign;\r\n}\r\n\r\ninterface NumberProvider {\r\n  number(id: NumberEffectId): EffectState<number>;\r\n}\r\n\r\nexport function numberView(\r\n  manager: NumberProvider,\r\n  id: NumberEffectId,\r\n  showSign?: ShowSign,\r\n  rounded?: boolean,\r\n): NumberView {\r\n  return {\r\n    value: manager.number(id).value,\r\n    style: EffectDisplayStyles[id],\r\n    showSign: showSign ?? \"always\",\r\n    rounded: rounded ?? false,\r\n  };\r\n}\r\n","import { reactive, computed } from \"vue\";\r\n\r\nimport { FulfillmentId, ResourceId } from \"@/app/interfaces\";\r\nimport { IngredientState, Meta, UnitKind } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \"..\";\r\nimport { NumberView } from \".\";\r\n\r\nexport interface IngredientItem {\r\n  readonly id: ResourceId;\r\n  label: string;\r\n  requirement: number;\r\n  fulfillment: number;\r\n  fulfilled: boolean;\r\n  fulfillmentTime?: NumberView | undefined;\r\n  capped: boolean;\r\n}\r\n\r\nexport interface FulfillmentItem {\r\n  ingredients: IngredientItem[];\r\n  fulfilled: boolean;\r\n  capped: boolean;\r\n}\r\n\r\nexport function fulfillment(\r\n  id: FulfillmentId,\r\n  manager: IStateManager,\r\n): FulfillmentItem {\r\n  const fulfillment = manager.fulfillment(id);\r\n  return reactive({\r\n    ingredients: Array.from(fulfillment.ingredients, (state) =>\r\n      reactive({\r\n        id: state.resourceId,\r\n        label: Meta.resource(state.resourceId).label,\r\n        requirement: computed(() => state.requirement),\r\n        fulfillment: computed(() => state.fulfillment),\r\n        fulfilled: computed(() => state.fulfilled),\r\n        fulfillmentTime: computed(() => fulfillmentTime(state)),\r\n        capped: computed(() => state.capped),\r\n      }),\r\n    ),\r\n    fulfilled: computed(() => fulfillment.fulfilled),\r\n    capped: computed(() => fulfillment.capped),\r\n  });\r\n}\r\n\r\nfunction fulfillmentTime(ingredient: IngredientState): NumberView | undefined {\r\n  if (ingredient.fulfillmentTime === undefined) {\r\n    return undefined;\r\n  } else {\r\n    return {\r\n      value: ingredient.fulfillmentTime,\r\n      style: { unit: UnitKind.Tick },\r\n      rounded: true,\r\n      showSign: \"negative\",\r\n    };\r\n  }\r\n}\r\n","import { computed, reactive } from \"vue\";\r\n\r\nimport { BuildingId, Intent } from \"@/app/interfaces\";\r\nimport { Meta, BonfireItemId, BonfireBuildingId } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \".\";\r\nimport { fulfillment, EffectItem, numberView, FulfillmentItem } from \"./common\";\r\n\r\nexport class BonfirePresenter {\r\n  readonly all: BonfireItem[];\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.all = Meta.bonfireItems()\r\n      .map((meta) => this.newBonfireItem(meta, manager))\r\n      .toArray();\r\n  }\r\n\r\n  private newBonfireItem(\r\n    id: BonfireItemId,\r\n    manager: IStateManager,\r\n  ): BonfireItem {\r\n    switch (id) {\r\n      case \"gather-catnip\":\r\n        return this.gatherCatnip();\r\n      case \"refine-catnip\":\r\n        return this.refineCatnip(manager);\r\n      default:\r\n        return this.buyBuilding(id, manager);\r\n    }\r\n  }\r\n\r\n  private gatherCatnip(): BonfireItem {\r\n    return reactive({\r\n      id: \"gather-catnip\",\r\n      intent: { kind: \"bonfire\", id: \"gather-catnip\" },\r\n      label: \"bonfire.gather-catnip.label\",\r\n      description: \"bonfire.gather-catnip.description\",\r\n\r\n      unlocked: true,\r\n      fulfillment: {\r\n        capped: false,\r\n        fulfilled: true,\r\n        ingredients: [],\r\n      },\r\n    });\r\n  }\r\n\r\n  private refineCatnip(manager: IStateManager): BonfireItem {\r\n    return reactive({\r\n      id: \"refine-catnip\",\r\n      intent: {\r\n        kind: \"workshop\",\r\n        id: \"craft-recipe\",\r\n        recipe: \"refine-catnip\",\r\n      },\r\n      label: \"bonfire.refine-catnip.label\",\r\n      description: \"bonfire.refine-catnip.description\",\r\n      flavor: \"bonfire.refine-catnip.flavor\",\r\n\r\n      unlocked: true,\r\n      fulfillment: computed(() => fulfillment(\"refine-catnip\", manager)),\r\n    });\r\n  }\r\n\r\n  private buyBuilding(\r\n    id: BonfireBuildingId,\r\n    manager: IStateManager,\r\n  ): BonfireItem {\r\n    const building = Meta.building(id);\r\n    const state = manager.building(building.id);\r\n    return reactive({\r\n      id: id,\r\n      intent: {\r\n        kind: \"construction\",\r\n        id: \"buy-building\",\r\n        building: building.id,\r\n      },\r\n      label: building.label,\r\n      description: building.description,\r\n      flavor: building.flavor,\r\n\r\n      unlocked: computed(() => state.unlocked),\r\n      level: computed(() => state.level),\r\n      fulfillment: computed(() => fulfillment(building.id, manager)),\r\n      effects: computed(() => this.effects(building.id, manager)),\r\n    });\r\n  }\r\n\r\n  private effects(\r\n    buildingId: BuildingId,\r\n    manager: IStateManager,\r\n  ): EffectItem[] {\r\n    const effects = Meta.building(buildingId).effects;\r\n    return Array.from(effects, (meta) =>\r\n      reactive({\r\n        id: meta.id,\r\n        label: meta.label,\r\n        singleAmount: computed(() => numberView(manager, meta.per)),\r\n        totalAmount: computed(() => numberView(manager, meta.total)),\r\n      }),\r\n    );\r\n  }\r\n}\r\n\r\nexport interface BonfireItem {\r\n  id: BonfireItemId;\r\n  intent: Intent;\r\n\r\n  label: string;\r\n  description: string;\r\n  flavor?: string;\r\n\r\n  unlocked: boolean;\r\n  level?: number;\r\n\r\n  fulfillment: FulfillmentItem;\r\n  effects?: EffectItem[];\r\n}\r\n","import { computed, reactive } from \"vue\";\r\n\r\nimport { Meta } from \"@/app/state\";\r\nimport { SeasonId, WeatherId } from \"@/app/interfaces\";\r\n\r\nimport { IStateManager } from \".\";\r\n\r\nexport class EnvironmentPresenter {\r\n  readonly calendar: Calendar;\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.calendar = this.newCalendar(manager);\r\n  }\r\n\r\n  private newCalendar(manager: IStateManager): Calendar {\r\n    const state = manager.environment();\r\n\r\n    return reactive({\r\n      day: computed(() => state.day),\r\n      season: computed(() => state.season),\r\n      year: computed(() => state.year),\r\n      weather: computed(() => state.weather),\r\n      calendarLabel: computed(() => state.calendarLabel),\r\n      epochLabel: computed(() => state.epochLabel),\r\n      seasonLabel: computed(() => Meta.season(state.season).label),\r\n      weatherLabel: computed(() => Meta.weather(state.weather).label),\r\n      showObserveSky: computed(\r\n        () => manager.stockpile(\"observe-sky\").amount > 0,\r\n      ),\r\n    });\r\n  }\r\n}\r\n\r\nexport interface Calendar {\r\n  day: number;\r\n  season: SeasonId;\r\n  year: number;\r\n  weather: WeatherId;\r\n  calendarLabel: string;\r\n  epochLabel: string;\r\n  seasonLabel: string;\r\n  weatherLabel: string | undefined;\r\n  showObserveSky: boolean;\r\n}\r\n","import { ShowSign } from \"@/app/interfaces\";\r\nimport { UnitKind } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \".\";\r\nimport { SandcastleBuilderFormatter, NumberView } from \"./common\";\r\n\r\nexport interface FormattingOptions {\r\n  precision: number;\r\n  units: \"ticks\" | \"seconds\";\r\n}\r\n\r\nexport class NumberFormatter {\r\n  private readonly fmt = SandcastleBuilderFormatter;\r\n\r\n  constructor(\r\n    private readonly manager: IStateManager,\r\n    public options: FormattingOptions,\r\n  ) {}\r\n\r\n  number(v: number, showSign: ShowSign = \"negative\"): string {\r\n    return this.fmt(v, this.options.precision, showSign);\r\n  }\r\n\r\n  percent(v: number, showSign: ShowSign = \"negative\"): string {\r\n    return this.fmt(v * 100, this.options.precision, showSign) + \"%\";\r\n  }\r\n\r\n  rounded(v: number, showSign: ShowSign = \"negative\"): string {\r\n    return this.fmt(v, 0, showSign);\r\n  }\r\n\r\n  v(view: NumberView): string {\r\n    if (view.value === undefined) {\r\n      return \"\";\r\n    }\r\n\r\n    const precision = view.rounded === true ? 0 : this.options.precision;\r\n    const showSign = view.showSign ?? \"negative\";\r\n    const value = view.style.invert === true ? -view.value : view.value;\r\n    switch (view.style.unit) {\r\n      case UnitKind.Percent:\r\n        return this.fmt(value * 100, precision, showSign) + \"%\";\r\n      case UnitKind.Tick: {\r\n        if (this.options.units === \"ticks\") {\r\n          return this.fmt(value, precision, showSign) + \"t\";\r\n        } else {\r\n          return this.fmt(value / this.tps, precision, showSign) + \"s\";\r\n        }\r\n      }\r\n      case UnitKind.PerTick: {\r\n        if (this.options.units === \"ticks\") {\r\n          return this.fmt(value, precision, showSign) + \"/t\";\r\n        } else {\r\n          return this.fmt(value * this.tps, precision, showSign) + \"/s\";\r\n        }\r\n      }\r\n      case UnitKind.None:\r\n        return this.fmt(value, precision, showSign);\r\n    }\r\n  }\r\n\r\n  private get tps(): number {\r\n    return 1000 / this.manager.time().millisPerTick;\r\n  }\r\n}\r\n","import { useI18n } from \"vue-i18n\";\r\n\r\nimport { IStateManager, NumberFormatter } from \".\";\r\nimport { HistoryEvent } from \"../state\";\r\n\r\nexport class LogPresenter {\r\n  private eventId = 0;\r\n\r\n  constructor(manager: IStateManager) {\r\n    manager.history().subscribe((events) => {\r\n      for (const event of events) {\r\n        if (event.disposition !== \"ignore\") {\r\n          document.dispatchEvent(\r\n            new CustomEvent<LogItem>(\"onlogmessage\", {\r\n              detail: {\r\n                id: this.eventId++,\r\n                resolve: (t, fmt) => resolve(t, fmt, event),\r\n              },\r\n            }),\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ntype TextComposer = ReturnType<typeof useI18n>[\"t\"];\r\n\r\nfunction resolve(\r\n  t: TextComposer,\r\n  fmt: NumberFormatter,\r\n  event: HistoryEvent,\r\n): string {\r\n  const named = event.named ?? {};\r\n\r\n  // format numbers\r\n  for (const key in named) {\r\n    if (Object.prototype.hasOwnProperty.call(event.named, key)) {\r\n      const element = named[key];\r\n      if (typeof element === \"number\") {\r\n        named[key] = fmt.number(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  switch (event.kind) {\r\n    case \"label\":\r\n      return t(event.label, named ?? {});\r\n\r\n    case \"plural-label\":\r\n      return t(event.label, named ?? {}, event.plural);\r\n\r\n    default:\r\n      throw new Error(\"unexpected event kind\");\r\n  }\r\n}\r\n\r\nexport interface LogItem {\r\n  id: number;\r\n  resolve: (t: TextComposer, fmt: NumberFormatter) => string;\r\n}\r\n\r\ninterface LogItemEventMap {\r\n  onlogmessage: CustomEvent<LogItem>;\r\n}\r\n\r\ntype LogListener<K extends keyof LogItemEventMap> = (\r\n  this: Document,\r\n  event: LogItemEventMap[K],\r\n) => void;\r\n\r\ndeclare global {\r\n  interface Document {\r\n    addEventListener<K extends keyof LogItemEventMap>(\r\n      type: K,\r\n      listener: LogListener<K>,\r\n    ): void;\r\n    removeEventListener<K extends keyof LogItemEventMap>(\r\n      type: K,\r\n      listener: LogListener<K>,\r\n    ): void;\r\n  }\r\n}\r\n","import { computed, reactive } from \"vue\";\r\n\r\nimport { IStateManager } from \".\";\r\n\r\nexport interface PlayerItem {\r\n  gatherCatnip: number;\r\n  timeAcceleration: number;\r\n}\r\n\r\nexport class PlayerPresenter {\r\n  readonly state: PlayerItem;\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.state = reactive({\r\n      gatherCatnip: computed(() => manager.player().gatherCatnip),\r\n      timeAcceleration: computed(() => manager.player().timeAcceleration),\r\n    });\r\n  }\r\n}\r\n","import { computed, reactive } from \"vue\";\r\n\r\nimport { ResourceId } from \"@/app/interfaces\";\r\nimport {\r\n  Meta,\r\n  ResourceMetadataType,\r\n  ResourceState,\r\n  UnitKind,\r\n} from \"@/app/state\";\r\n\r\nimport { IStateManager } from \".\";\r\nimport { numberView, effectTree, NumberView, EffectTree } from \"./common\";\r\n\r\nexport class ResourcesPresenter {\r\n  readonly all: ResourceItem[];\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.all = Meta.resources()\r\n      .map((meta) => this.newResource(meta, manager))\r\n      .toArray();\r\n  }\r\n\r\n  private newResource(\r\n    meta: ResourceMetadataType,\r\n    manager: IStateManager,\r\n  ): ResourceItem {\r\n    const res = manager.resource(meta.id);\r\n\r\n    return reactive({\r\n      id: meta.id,\r\n      label: meta.label,\r\n      unlocked: computed(() => res.unlocked),\r\n      amount: computed(() => res.amount),\r\n      change: computed(() =>\r\n        meta.id !== \"kittens\"\r\n          ? this.resourceChange(res)\r\n          : this.kittensChange(manager),\r\n      ),\r\n      capacity: computed(() => res.capacity),\r\n      modifier: computed(() =>\r\n        meta.id === \"catnip\" ? numberView(manager, \"weather.ratio\") : undefined,\r\n      ),\r\n      deltaTree: computed(() =>\r\n        meta.effects.delta !== undefined\r\n          ? effectTree(meta.effects.delta, manager)\r\n          : undefined,\r\n      ),\r\n    });\r\n  }\r\n\r\n  private resourceChange(res: ResourceState): NumberView {\r\n    return {\r\n      value: res.change,\r\n      style: { unit: UnitKind.PerTick },\r\n      showSign: \"always\",\r\n    };\r\n  }\r\n\r\n  private kittensChange(manager: IStateManager): NumberView {\r\n    return {\r\n      value: manager.stockpile(\"kitten-growth\").amount,\r\n      style: { unit: UnitKind.Percent },\r\n      showSign: \"negative\",\r\n      rounded: true,\r\n    };\r\n  }\r\n}\r\n\r\nexport interface ResourceItem {\r\n  readonly id: ResourceId;\r\n  label: string;\r\n  unlocked: boolean;\r\n  amount: number;\r\n  change: NumberView;\r\n  capacity?: number;\r\n  modifier?: NumberView;\r\n  deltaTree?: EffectTree;\r\n}\r\n","import { computed, ComputedRef, reactive } from \"vue\";\r\n\r\nimport { ResearchIntent, TechId } from \"@/app/interfaces\";\r\nimport { Meta, TechMetadataType } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \".\";\r\nimport { fulfillment, FulfillmentItem } from \"./common\";\r\n\r\nexport class SciencePresenter {\r\n  readonly items: ComputedRef<TechItem[]>;\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.items = computed(() =>\r\n      manager\r\n        .techs()\r\n        .map((id) => this.newTechItem(id, manager))\r\n        .toArray(),\r\n    );\r\n  }\r\n\r\n  private newTechItem(id: TechId, manager: IStateManager): TechItem {\r\n    const meta = Meta.tech(id);\r\n    const state = manager.tech(id);\r\n    return reactive({\r\n      ...this.staticData(meta),\r\n      intent: { kind: \"research\", id: \"research-tech\", tech: meta.id },\r\n\r\n      unlocked: computed(() => state.unlocked),\r\n      researched: computed(() => state.researched),\r\n\r\n      fulfillment: computed(() => fulfillment(meta.id, manager)),\r\n      effects: meta.effects,\r\n    });\r\n  }\r\n\r\n  private staticData(meta: TechMetadataType) {\r\n    return {\r\n      id: meta.id,\r\n      label: meta.label,\r\n      description: meta.description,\r\n      flavor: meta.flavor,\r\n    };\r\n  }\r\n}\r\n\r\nexport interface TechItem {\r\n  id: TechId;\r\n  intent: ResearchIntent;\r\n  label: string;\r\n  description: string;\r\n  flavor: string | undefined;\r\n  unlocked: boolean;\r\n  researched: boolean;\r\n  effects: TechEffectItem[];\r\n  fulfillment: FulfillmentItem;\r\n}\r\n\r\nexport interface TechEffectItem {\r\n  id: string;\r\n  label: string;\r\n}\r\n","import { computed, reactive } from \"vue\";\r\n\r\nimport { SectionId } from \"@/app/interfaces\";\r\nimport { Meta } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \".\";\r\n\r\nexport class SectionsPresenter {\r\n  readonly bonfire: SectionItem;\r\n  readonly society: SectionItem;\r\n  readonly jobs: SectionItem;\r\n  readonly management: SectionItem;\r\n  readonly science: SectionItem;\r\n  readonly technologies: SectionItem;\r\n\r\n  readonly topLevelSections;\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.bonfire = this.newSectionItem(\"bonfire\", manager);\r\n    this.society = this.newSectionItem(\"society\", manager);\r\n    this.jobs = this.newSectionItem(\"jobs\", manager);\r\n    this.management = this.newSectionItem(\"management\", manager);\r\n    this.science = this.newSectionItem(\"science\", manager);\r\n    this.technologies = this.newSectionItem(\"technologies\", manager);\r\n\r\n    this.topLevelSections = [this.bonfire, this.society, this.science];\r\n  }\r\n\r\n  private newSectionItem(id: SectionId, manager: IStateManager): SectionItem {\r\n    const meta = Meta.section(id);\r\n    const state = manager.section(id);\r\n    return reactive({\r\n      id: id,\r\n      parentId: meta.parent,\r\n      label: computed(() => state.label),\r\n      unlocked: computed(() => state.unlocked),\r\n      alert: computed(() => state.alert),\r\n    });\r\n  }\r\n}\r\n\r\nexport interface SectionItem {\r\n  readonly id: SectionId;\r\n  readonly parentId: SectionId | undefined;\r\n  unlocked: boolean;\r\n  label: string;\r\n  alert?: string | undefined;\r\n}\r\n","import { computed, ComputedRef, reactive } from \"vue\";\r\n\r\nimport { JobId, PopId } from \"@/app/interfaces\";\r\nimport { JobEffectType, JobState, Meta, PopState } from \"@/app/state\";\r\n\r\nimport { IStateManager } from \".\";\r\nimport {\r\n  EffectItem,\r\n  effectTree,\r\n  EffectTree,\r\n  NumberView,\r\n  numberView,\r\n} from \"./common\";\r\n\r\nexport interface PopItem {\r\n  id: string;\r\n  job: JobId | undefined;\r\n}\r\n\r\nexport interface JobItem {\r\n  id: JobId;\r\n  label: string;\r\n  description: string;\r\n  flavor?: string;\r\n  pops: number;\r\n  effects: EffectItem[];\r\n  capped: boolean;\r\n  unlocked: boolean;\r\n}\r\n\r\nexport interface HappinessItem {\r\n  view: NumberView;\r\n  effectTree: EffectTree;\r\n}\r\n\r\nexport class SocietyPresenter {\r\n  readonly pops: ComputedRef<PopItem[]>;\r\n  readonly jobs: ComputedRef<JobItem[]>;\r\n\r\n  readonly happiness: HappinessItem;\r\n  readonly allowSendHunters: ComputedRef<boolean>;\r\n\r\n  constructor(manager: IStateManager) {\r\n    this.pops = computed(() =>\r\n      manager\r\n        .pops()\r\n        .map(([id, state]) => this.newPopItem(id, state))\r\n        .toArray(),\r\n    );\r\n\r\n    this.jobs = computed(() =>\r\n      manager\r\n        .jobs()\r\n        .map(([id, state]) => this.newJobItem(id, state, manager))\r\n        .toArray(),\r\n    );\r\n\r\n    this.happiness = reactive({\r\n      view: computed(() =>\r\n        numberView(manager, \"population.happiness.total\", \"negative\"),\r\n      ),\r\n      effectTree: effectTree(\"population.happiness.total\", manager),\r\n    });\r\n\r\n    this.allowSendHunters = computed(() => manager.tech(\"archery\").researched);\r\n  }\r\n\r\n  private newJobItem(\r\n    id: JobId,\r\n    state: JobState,\r\n    manager: IStateManager,\r\n  ): JobItem {\r\n    const meta = Meta.job(id);\r\n    return reactive({\r\n      id: meta.id,\r\n      label: meta.label,\r\n      description: meta.description,\r\n      flavor: meta.flavor,\r\n      capped: false,\r\n      unlocked: computed(() => state.unlocked),\r\n      pops: computed(() => manager.pops().count(([, s]) => s.job === meta.id)),\r\n      effects: computed(() => this.effects(meta.effects, manager)),\r\n    });\r\n  }\r\n\r\n  private effects(\r\n    effects: JobEffectType[],\r\n    manager: IStateManager,\r\n  ): EffectItem[] {\r\n    return Array.from(effects, (meta) =>\r\n      reactive({\r\n        id: meta.id,\r\n        label: meta.label,\r\n        singleAmount: computed(() => numberView(manager, meta.base)),\r\n        totalAmount: computed(() => numberView(manager, meta.total)),\r\n      }),\r\n    );\r\n  }\r\n\r\n  private newPopItem(id: PopId, state: PopState): PopItem {\r\n    return reactive({\r\n      id: id,\r\n      job: state.job,\r\n    });\r\n  }\r\n}\r\n","import { customRef, watchSyncEffect } from \"vue\";\r\n\r\nexport class Channel<T = unknown> {\r\n  private readonly items: T[] = [];\r\n  private readonly trigger = customRef<boolean>((track, trigger) => {\r\n    let v = false;\r\n    return {\r\n      get() {\r\n        track();\r\n        return v;\r\n      },\r\n      set(value: boolean) {\r\n        v = value;\r\n        if (v) {\r\n          // only trigger reactivity when set to true.\r\n          trigger();\r\n        }\r\n      },\r\n    };\r\n  });\r\n\r\n  constructor() {\r\n    this.trigger.value = false;\r\n  }\r\n\r\n  push(items: Iterable<T>): void {\r\n    for (const item of items) {\r\n      this.items.push(item);\r\n    }\r\n\r\n    this.trigger.value = true;\r\n  }\r\n\r\n  private *pull(): Iterable<T> {\r\n    const items = this.items.splice(0);\r\n    this.trigger.value = false;\r\n\r\n    for (const item of items) {\r\n      yield item;\r\n    }\r\n  }\r\n\r\n  subscribe(handler: (items: Iterable<T>) => void): StopHandle {\r\n    return watchSyncEffect(() => {\r\n      if (this.trigger.value) {\r\n        handler(this.pull());\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\ntype StopHandle = () => void;\r\n","import { mergeWith } from \"lodash\";\r\nimport { reactive } from \"vue\";\r\n\r\nimport {\r\n  BuildingId,\r\n  EventId,\r\n  EventPool,\r\n  FulfillmentId,\r\n  IPresenterChangeSink,\r\n  JobId,\r\n  MutationPool,\r\n  NumberEffectId,\r\n  PoolId,\r\n  PopId,\r\n  PropertyBag,\r\n  RecipeId,\r\n  ResourceId,\r\n  SectionId,\r\n  TechId,\r\n  StockpileId,\r\n} from \"@/app/interfaces\";\r\nimport { Channel } from \"@/app/presenters/common/channel\";\r\nimport {\r\n  BuildingState,\r\n  EffectState,\r\n  EffectTreeState,\r\n  EnvironmentState,\r\n  FulfillmentState,\r\n  HistoryEvent,\r\n  JobState,\r\n  PlayerState,\r\n  PopState,\r\n  RecipeState,\r\n  ResourceState,\r\n  SectionState,\r\n  StockpileState,\r\n  TechState,\r\n  TimeState,\r\n} from \"@/app/state\";\r\nimport { getOrAdd } from \"@/app/utils/collections\";\r\nimport { asEnumerable, Enumerable } from \"@/app/utils/enumerable\";\r\n\r\nexport interface IStateManager {\r\n  buildings(): Enumerable<[BuildingId, BuildingState]>;\r\n  building(id: BuildingId): BuildingState;\r\n\r\n  fulfillment(id: FulfillmentId): FulfillmentState;\r\n\r\n  number(id: NumberEffectId): EffectState<number>;\r\n\r\n  jobs(): Enumerable<[JobId, JobState]>;\r\n  job(id: JobId): JobState;\r\n\r\n  pops(): Enumerable<[PopId, PopState]>;\r\n\r\n  recipe(id: RecipeId): RecipeState;\r\n\r\n  resource(id: ResourceId): ResourceState;\r\n\r\n  sections(): Enumerable<[SectionId, SectionState]>;\r\n  section(id: SectionId): SectionState;\r\n\r\n  stockpile(id: StockpileId): StockpileState;\r\n\r\n  techs(): Enumerable<TechId>;\r\n  tech(id: TechId): TechState;\r\n\r\n  effectTree(): EffectTreeState;\r\n  environment(): EnvironmentState;\r\n  player(): PlayerState;\r\n  time(): TimeState;\r\n\r\n  history(): Channel<HistoryEvent>;\r\n}\r\n\r\nclass MutationPools extends Map<PoolId, Map<string, PropertyBag>> {\r\n  get buildings(): Map<BuildingId, BuildingState> {\r\n    return this.ensure(\"buildings\") as unknown as Map<\r\n      BuildingId,\r\n      BuildingState\r\n    >;\r\n  }\r\n\r\n  get fulfillments(): Map<FulfillmentId, FulfillmentState> {\r\n    return this.ensure(\"fulfillments\") as unknown as Map<\r\n      FulfillmentId,\r\n      FulfillmentState\r\n    >;\r\n  }\r\n\r\n  get jobs(): Map<JobId, JobState> {\r\n    return this.ensure(\"jobs\") as unknown as Map<JobId, JobState>;\r\n  }\r\n\r\n  get numbers(): Map<NumberEffectId, EffectState<number>> {\r\n    return this.ensure(\"numbers\") as unknown as Map<\r\n      NumberEffectId,\r\n      EffectState<number>\r\n    >;\r\n  }\r\n\r\n  get pops(): Map<PopId, PopState> {\r\n    return this.ensure(\"pops\") as unknown as Map<PopId, PopState>;\r\n  }\r\n\r\n  get recipes(): Map<RecipeId, RecipeState> {\r\n    return this.ensure(\"recipes\") as unknown as Map<RecipeId, RecipeState>;\r\n  }\r\n\r\n  get resources(): Map<ResourceId, ResourceState> {\r\n    return this.ensure(\"resources\") as unknown as Map<\r\n      ResourceId,\r\n      ResourceState\r\n    >;\r\n  }\r\n\r\n  get sections(): Map<SectionId, SectionState> {\r\n    return this.ensure(\"sections\") as unknown as Map<SectionId, SectionState>;\r\n  }\r\n\r\n  get stockpiles(): Map<StockpileId, StockpileState> {\r\n    return this.ensure(\"stockpiles\") as unknown as Map<\r\n      StockpileId,\r\n      StockpileState\r\n    >;\r\n  }\r\n\r\n  get techs(): Map<TechId, TechState> {\r\n    return this.ensure(\"techs\") as unknown as Map<TechId, TechState>;\r\n  }\r\n\r\n  ensure(id: PoolId): Map<string, PropertyBag> {\r\n    return getOrAdd(this, id, () => reactive(new Map<string, PropertyBag>()));\r\n  }\r\n}\r\n\r\nclass EventPools extends Map<EventId, Channel> {\r\n  get history(): Channel<HistoryEvent> {\r\n    return this.ensure(\"history\") as Channel<HistoryEvent>;\r\n  }\r\n\r\n  ensure(id: EventId): Channel {\r\n    return getOrAdd(this, id, () => new Channel());\r\n  }\r\n}\r\n\r\nexport class StateManager implements IPresenterChangeSink, IStateManager {\r\n  private readonly pools: MutationPools;\r\n  private readonly events: EventPools;\r\n\r\n  constructor() {\r\n    this.pools = new MutationPools();\r\n    this.events = new EventPools();\r\n  }\r\n\r\n  acceptMutations(mutations: MutationPool[]): void {\r\n    for (const pool of mutations) {\r\n      const values = this.pools.ensure(pool.poolId);\r\n      if (pool.added) {\r\n        for (const [id, state] of pool.added) {\r\n          values.set(id, reactive(state));\r\n        }\r\n      }\r\n      if (pool.updated) {\r\n        for (const [id, state] of pool.updated) {\r\n          updateObject(state, values.get(id));\r\n        }\r\n      }\r\n      if (pool.removed) {\r\n        for (const id of pool.removed) {\r\n          values.delete(id);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  acceptEvents(events: EventPool[]): void {\r\n    for (const pool of events) {\r\n      const channel = this.events.ensure(pool.id);\r\n      channel.push(pool.events);\r\n    }\r\n  }\r\n\r\n  buildings(): Enumerable<[BuildingId, BuildingState]> {\r\n    return asEnumerable(this.pools.buildings.entries());\r\n  }\r\n\r\n  building(id: BuildingId): BuildingState {\r\n    return this.pools.buildings.get(id) as BuildingState;\r\n  }\r\n\r\n  fulfillment(id: FulfillmentId): FulfillmentState {\r\n    return this.pools.fulfillments.get(id) as FulfillmentState;\r\n  }\r\n\r\n  jobs(): Enumerable<[JobId, JobState]> {\r\n    return asEnumerable(this.pools.jobs.entries());\r\n  }\r\n\r\n  job(id: JobId): JobState {\r\n    return this.pools.jobs.get(id) as JobState;\r\n  }\r\n\r\n  number(id: NumberEffectId): EffectState<number> {\r\n    return this.pools.numbers.get(id) as EffectState<number>;\r\n  }\r\n\r\n  pops(): Enumerable<[PopId, PopState]> {\r\n    return asEnumerable(this.pools.pops.entries());\r\n  }\r\n\r\n  recipe(id: RecipeId): RecipeState {\r\n    return this.pools.recipes.get(id) as RecipeState;\r\n  }\r\n\r\n  resource(id: ResourceId): ResourceState {\r\n    return this.pools.resources.get(id) as ResourceState;\r\n  }\r\n\r\n  sections(): Enumerable<[SectionId, SectionState]> {\r\n    return asEnumerable(this.pools.sections.entries());\r\n  }\r\n\r\n  section(id: SectionId): SectionState {\r\n    return this.pools.sections.get(id) as SectionState;\r\n  }\r\n\r\n  stockpile(id: StockpileId): StockpileState {\r\n    return this.pools.stockpiles.get(id) as StockpileState;\r\n  }\r\n\r\n  techs(): Enumerable<TechId> {\r\n    return asEnumerable(this.pools.techs.keys());\r\n  }\r\n\r\n  tech(id: TechId): TechState {\r\n    return this.pools.techs.get(id) as TechState;\r\n  }\r\n\r\n  effectTree(): EffectTreeState {\r\n    const pool = this.pools.ensure(\"singletons\");\r\n    return pool.get(\"effect-tree\") as unknown as EffectTreeState;\r\n  }\r\n\r\n  environment(): EnvironmentState {\r\n    const pool = this.pools.ensure(\"singletons\");\r\n    return pool.get(\"environment\") as unknown as EnvironmentState;\r\n  }\r\n\r\n  player(): PlayerState {\r\n    const pool = this.pools.ensure(\"singletons\");\r\n    return pool.get(\"player\") as unknown as PlayerState;\r\n  }\r\n\r\n  time(): TimeState {\r\n    const pool = this.pools.ensure(\"singletons\");\r\n    return pool.get(\"time\") as unknown as TimeState;\r\n  }\r\n\r\n  history(): Channel<HistoryEvent> {\r\n    return this.events.history;\r\n  }\r\n}\r\n\r\nfunction updateObject(src: PropertyBag, dst?: PropertyBag): PropertyBag {\r\n  dst = dst ?? reactive({});\r\n  mergeWith(dst, src, (dstValue, srcValue, key, dstObj) => {\r\n    if (srcValue === undefined && dstValue !== undefined) {\r\n      // undefined is a valid value\r\n      dstObj[key] = undefined;\r\n    } else {\r\n      // leave it up to the calling method\r\n      return undefined;\r\n    }\r\n  });\r\n  return dst;\r\n}\r\n","import { DBSchema, IDBPDatabase } from \"idb\";\r\n\r\nimport {\r\n  ResourceId,\r\n  BuildingId,\r\n  JobId,\r\n  SeasonId,\r\n  WeatherId,\r\n} from \"@/app/interfaces\";\r\n\r\nimport { AtomicState, DeepPartial } from \"..\";\r\nimport { LatestSchema, UpgradeTransaction } from \".\";\r\n\r\nexport interface OsSchemaV1 extends DBSchema {\r\n  general: {\r\n    key: \"general\";\r\n    value: {\r\n      currentSlot?: number;\r\n    };\r\n  };\r\n  saves: {\r\n    key: number;\r\n    value: {\r\n      version: number;\r\n      state: DeepPartial<{\r\n        buildings: {\r\n          [B in BuildingId]?: AtomicState<{\r\n            level: number;\r\n          }>;\r\n        };\r\n        environment: AtomicState<{\r\n          year: number;\r\n          season: SeasonId;\r\n          day: number;\r\n          weather: WeatherId;\r\n        }>;\r\n        pops: AtomicState<{\r\n          name: string;\r\n          job?: JobId;\r\n        }>[];\r\n        player: AtomicState<{\r\n          dev: { timeAcceleration: number; gatherCatnip: number } | undefined;\r\n        }>;\r\n        resources: {\r\n          [R in ResourceId]?: AtomicState<{\r\n            amount: number;\r\n          }>;\r\n        };\r\n        time: {\r\n          ticks: number;\r\n          days: number;\r\n        };\r\n        seeds: {\r\n          environment: number;\r\n        };\r\n        society: {\r\n          stockpile: number;\r\n        };\r\n      }>;\r\n    };\r\n  };\r\n}\r\n\r\nexport async function migrateV1(\r\n  database: IDBPDatabase<LatestSchema>,\r\n  _transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  // initial version\r\n  const v1 = database as unknown as IDBPDatabase<OsSchemaV1>;\r\n  v1.createObjectStore(\"general\");\r\n  v1.createObjectStore(\"saves\", { autoIncrement: true });\r\n}\r\n","import { DBSchema, IDBPDatabase } from \"idb\";\r\n\r\nimport { TechId } from \"@/app/interfaces\";\r\n\r\nimport { AtomicState, DeepPartial } from \"..\";\r\nimport { OsSchemaV1 } from \"./v1\";\r\nimport { LatestSchema, UpgradeTransaction } from \".\";\r\n\r\ntype LastStateSchema = OsSchemaV1[\"saves\"][\"value\"][\"state\"];\r\n\r\ntype Additions = {\r\n  science: {\r\n    [T in TechId]?: AtomicState<{\r\n      researched: boolean;\r\n    }>;\r\n  };\r\n};\r\n\r\nexport interface OsSchemaV2 extends DBSchema {\r\n  general: {\r\n    key: \"general\";\r\n    value: {\r\n      currentSlot?: number;\r\n    };\r\n  };\r\n  saves: {\r\n    key: number;\r\n    value: {\r\n      version: number;\r\n      state: LastStateSchema & DeepPartial<Additions>;\r\n    };\r\n  };\r\n}\r\n\r\nexport async function migrateV2(\r\n  _database: IDBPDatabase<LatestSchema>,\r\n  _transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  // added science, no need for explicit migration\r\n  return;\r\n}\r\n","import { DBSchema, IDBPDatabase } from \"idb\";\r\n\r\nimport { BuildingId } from \"@/app/interfaces\";\r\n\r\nimport { AtomicState, DeepPartial } from \"..\";\r\nimport { OsSchemaV2 } from \"./v2\";\r\nimport { LatestSchema, UpgradeTransaction } from \".\";\r\n\r\ntype LastStateSchema = OsSchemaV2[\"saves\"][\"value\"][\"state\"];\r\n\r\ntype Additions = {\r\n  buildings: {\r\n    [B in BuildingId]?: AtomicState<{\r\n      unlocked: boolean;\r\n    }>;\r\n  };\r\n};\r\n\r\nexport interface OsSchemaV3 extends DBSchema {\r\n  general: {\r\n    key: \"general\";\r\n    value: {\r\n      currentSlot?: number;\r\n    };\r\n  };\r\n  saves: {\r\n    key: number;\r\n    value: {\r\n      version: number;\r\n      state: LastStateSchema & DeepPartial<Additions>;\r\n    };\r\n  };\r\n}\r\n\r\nexport async function migrateV3(\r\n  _database: IDBPDatabase<LatestSchema>,\r\n  _transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  const tx = _transaction as unknown as UpgradeTransaction<OsSchemaV3>;\r\n  const saves = tx.objectStore(\"saves\");\r\n  let cursor = await saves.openCursor();\r\n  while (cursor) {\r\n    const save = cursor.value;\r\n    const buildings = save.state.buildings ?? {};\r\n    for (const building of Object.values(buildings)) {\r\n      // added unlocked state for buildings\r\n      building.unlocked = building.level > 0;\r\n    }\r\n\r\n    await cursor.update(save);\r\n    cursor = await cursor.continue();\r\n  }\r\n}\r\n","import { DBSchema, IDBPDatabase } from \"idb\";\r\n\r\nimport { ResourceId } from \"@/app/interfaces\";\r\n\r\nimport { AtomicState, DeepPartial } from \"..\";\r\nimport { LatestSchema, UpgradeTransaction } from \".\";\r\nimport { OsSchemaV3 } from \"./v3\";\r\n\r\ntype LastStateSchema = OsSchemaV3[\"saves\"][\"value\"][\"state\"];\r\n\r\ntype Additions = {\r\n  resources: {\r\n    [R in ResourceId]?: AtomicState<{\r\n      unlocked: boolean;\r\n    }>;\r\n  };\r\n};\r\n\r\nexport interface OsSchemaV4 extends DBSchema {\r\n  general: {\r\n    key: \"general\";\r\n    value: {\r\n      currentSlot?: number;\r\n    };\r\n  };\r\n  saves: {\r\n    key: number;\r\n    value: {\r\n      version: number;\r\n      state: LastStateSchema & DeepPartial<Additions>;\r\n    };\r\n  };\r\n}\r\n\r\nexport async function migrateV4(\r\n  _database: IDBPDatabase<LatestSchema>,\r\n  transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  const tx = transaction as unknown as UpgradeTransaction<OsSchemaV4>;\r\n  const saves = tx.objectStore(\"saves\");\r\n  let cursor = await saves.openCursor();\r\n  while (cursor) {\r\n    const save = cursor.value;\r\n\r\n    const resources = save.state.resources;\r\n    if (resources) {\r\n      for (const resource of Object.values(resources)) {\r\n        // defined unlocked state\r\n        // NOTE: this is only a heuristic...\r\n        resource.unlocked = resource.amount > 0;\r\n      }\r\n    }\r\n\r\n    await cursor.update(save);\r\n    cursor = await cursor.continue();\r\n  }\r\n}\r\n","import { StockpileId } from \"@/app/interfaces\";\r\nimport { DBSchema, IDBPDatabase } from \"idb\";\r\nimport { LatestSchema, UpgradeTransaction } from \".\";\r\n\r\nimport { AtomicState, DeepPartial } from \"..\";\r\nimport { OsSchemaV4 } from \"./v4\";\r\n\r\ntype LastStateSchema = OsSchemaV4[\"saves\"][\"value\"][\"state\"];\r\n\r\ntype Additions = {\r\n  stockpiles: {\r\n    [S in StockpileId]?: AtomicState<{\r\n      amount: number;\r\n    }>;\r\n  };\r\n};\r\n\r\nexport interface OsSchemaV5 extends DBSchema {\r\n  general: {\r\n    key: \"general\";\r\n    value: {\r\n      currentSlot?: number;\r\n    };\r\n  };\r\n  saves: {\r\n    key: number;\r\n    value: {\r\n      version: number;\r\n      state: Omit<LastStateSchema, \"society\"> & DeepPartial<Additions>;\r\n    };\r\n  };\r\n}\r\n\r\nexport async function migrateV5(\r\n  _database: IDBPDatabase<LatestSchema>,\r\n  transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  const tx = transaction as unknown as UpgradeTransaction<OsSchemaV5>;\r\n  const saves = tx.objectStore(\"saves\");\r\n  let cursor = await saves.openCursor();\r\n  while (cursor) {\r\n    const save = cursor.value;\r\n\r\n    const { state } = save;\r\n    // moved society stockpile to separate section\r\n    const society = (state as LastStateSchema).society;\r\n    if (society) {\r\n      state.stockpiles = {\r\n        \"kitten-growth\": { amount: society.stockpile },\r\n      };\r\n    }\r\n    // removed society state\r\n    delete (state as LastStateSchema).society;\r\n\r\n    await cursor.update(save);\r\n    cursor = await cursor.continue();\r\n  }\r\n}\r\n","import { DBSchema, IDBPDatabase } from \"idb\";\r\nimport { LatestSchema, UpgradeTransaction } from \".\";\r\n\r\nimport { DeepPartial } from \"..\";\r\nimport { OsSchemaV5 } from \"./v5\";\r\n\r\ntype LastStateSchema = OsSchemaV5[\"saves\"][\"value\"][\"state\"];\r\n\r\ntype Additions = {\r\n  seeds: {\r\n    astronomy: number;\r\n  };\r\n};\r\n\r\nexport interface OsSchemaV6 extends DBSchema {\r\n  general: {\r\n    key: \"general\";\r\n    value: {\r\n      currentSlot?: number;\r\n    };\r\n  };\r\n  saves: {\r\n    key: number;\r\n    value: {\r\n      version: number;\r\n      state: LastStateSchema & DeepPartial<Additions>;\r\n    };\r\n  };\r\n}\r\n\r\nexport async function migrateV6(\r\n  _database: IDBPDatabase<LatestSchema>,\r\n  _transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  // added astronomy seed, no custom migration needed\r\n}\r\n","import { IDBPDatabase, IDBPTransaction, StoreNames } from \"idb\";\r\n\r\nimport { migrateV1 } from \"./v1\";\r\nimport { migrateV2 } from \"./v2\";\r\nimport { migrateV3 } from \"./v3\";\r\nimport { migrateV4 } from \"./v4\";\r\nimport { migrateV5 } from \"./v5\";\r\nimport { migrateV6, OsSchemaV6 } from \"./v6\";\r\n\r\nexport const DatabaseName = \"os-data\";\r\nexport const LatestVersion = 6;\r\nexport type LatestSchema = OsSchemaV6;\r\nexport type UpgradeTransaction<TSchema = LatestSchema> = IDBPTransaction<\r\n  TSchema,\r\n  StoreNames<TSchema>[],\r\n  \"versionchange\"\r\n>;\r\n\r\ntype Migration = {\r\n  version: number;\r\n  run: (\r\n    database: IDBPDatabase<LatestSchema>,\r\n    transaction: UpgradeTransaction,\r\n  ) => Promise<void>;\r\n};\r\n\r\nconst migrations: Migration[] = [\r\n  { version: 1, run: migrateV1 },\r\n  { version: 2, run: migrateV2 },\r\n  { version: 3, run: migrateV3 },\r\n  { version: 4, run: migrateV4 },\r\n  { version: 5, run: migrateV5 },\r\n  { version: 6, run: migrateV6 },\r\n];\r\n\r\nexport async function migrate(\r\n  db: IDBPDatabase<LatestSchema>,\r\n  oldVersion: number,\r\n  newVersion: number | null,\r\n  transaction: UpgradeTransaction,\r\n): Promise<void> {\r\n  let range = migrations.filter((m) => oldVersion < m.version);\r\n  if (newVersion !== null) {\r\n    range = range.filter((m) => m.version <= newVersion);\r\n  }\r\n  for (const migration of range) {\r\n    await migration.run(db, transaction);\r\n  }\r\n}\r\n","import { deleteDB, openDB, StoreValue } from \"idb\";\r\nimport { DatabaseName, LatestSchema, LatestVersion, migrate } from \"./schemas\";\r\n\r\nexport class NotInitializedError extends Error {\r\n  constructor() {\r\n    super(`database not initialized`);\r\n  }\r\n}\r\n\r\nexport class SaveSlotDoesNotExistError extends Error {\r\n  constructor(readonly id: number) {\r\n    super(`save slot ${id} does not exist`);\r\n  }\r\n}\r\n\r\nexport class SaveSlotVersionMismatchError extends Error {\r\n  constructor(\r\n    readonly id: number,\r\n    readonly expected: number,\r\n    readonly actual: number,\r\n  ) {\r\n    super(\r\n      `expected save slot ${id} to have version ${expected} but found ${actual} instead`,\r\n    );\r\n  }\r\n}\r\n\r\nfunction openStore() {\r\n  return openDB<LatestSchema>(DatabaseName, LatestVersion, {\r\n    async upgrade(db, oldVersion, newVersion, transaction) {\r\n      if (newVersion !== null && newVersion < LatestVersion) {\r\n        throw new Error(\"tried to migrate to version older than latest\");\r\n      }\r\n      await migrate(db, oldVersion, newVersion, transaction);\r\n    },\r\n  });\r\n}\r\n\r\nexport type General = StoreValue<LatestSchema, \"general\">;\r\nexport type SaveSlot = StoreValue<LatestSchema, \"saves\">;\r\n\r\n/** Creates a new save slot.\r\n * @returns the identifier of the new slot.\r\n */\r\nexport async function newSlot(): Promise<number> {\r\n  const db = await openStore();\r\n\r\n  const tx = db.transaction(\"saves\", \"readwrite\");\r\n  const id = await tx.store.add({\r\n    version: 1,\r\n    state: {},\r\n  });\r\n\r\n  await tx.done;\r\n\r\n  return id;\r\n}\r\n\r\n/** Loads the general configuration, or initializes it if it's not present. */\r\nexport async function loadOrInitGeneral(): Promise<General> {\r\n  const db = await openStore();\r\n\r\n  const tx = db.transaction(\"general\", \"readwrite\");\r\n  let general = await tx.store.get(\"general\");\r\n  if (general === undefined) {\r\n    general = {};\r\n    await tx.store.put(general, \"general\");\r\n  }\r\n\r\n  await tx.done;\r\n\r\n  return general;\r\n}\r\n\r\n/** Saves the general configuration.\r\n * @throws NotInitializedError\r\n */\r\nexport async function setCurrentSlot(currentSlot: number): Promise<void> {\r\n  const db = await openStore();\r\n\r\n  const tx = db.transaction(\"general\", \"readwrite\");\r\n  const general = await tx.store.get(\"general\");\r\n  if (general === undefined) {\r\n    throw new NotInitializedError();\r\n  }\r\n\r\n  general.currentSlot = currentSlot;\r\n  await tx.store.put(general, \"general\");\r\n\r\n  await tx.done;\r\n}\r\n\r\n/** Loads the specified save slot.\r\n * @param id the identifier of the save slot to load\r\n * @throws SaveSlotDoesNotExistError\r\n */\r\nexport async function loadSlot(id: number): Promise<SaveSlot> {\r\n  const db = await openStore();\r\n\r\n  const state = await db.get(\"saves\", id);\r\n  if (!state) {\r\n    throw new SaveSlotDoesNotExistError(id);\r\n  }\r\n  return state;\r\n}\r\n\r\n/** Updates the data in a save slot.\r\n * @param id the identifier of the save slot to update.\r\n * @param state the new save state to persist\r\n * @throws SaveSlotDoesNotExistError\r\n * @throws SaveSlotVersionMismatchError\r\n */\r\nexport async function saveSlot(id: number, state: SaveSlot): Promise<void> {\r\n  const db = await openStore();\r\n\r\n  const tx = db.transaction(\"saves\", \"readwrite\", { durability: \"strict\" });\r\n  const current = await tx.store.get(id);\r\n  if (!current) {\r\n    throw new SaveSlotDoesNotExistError(id);\r\n  }\r\n  if (current.version !== state.version) {\r\n    throw new SaveSlotVersionMismatchError(id, state.version, current.version);\r\n  }\r\n\r\n  state.version++;\r\n  tx.store.put(state, id);\r\n\r\n  await tx.done;\r\n}\r\n\r\n/** Deletes the specified save slot\r\n * @param id the save slot to delete\r\n */\r\nexport async function wipeSlot(id: number): Promise<void> {\r\n  const db = await openStore();\r\n\r\n  const tx = db.transaction(\"saves\", \"readwrite\");\r\n  await tx.store.delete(id);\r\n\r\n  await tx.done;\r\n}\r\n\r\n/** Deletes all save slots. */\r\nexport async function wipeAllSlots(): Promise<void> {\r\n  await deleteDB(\"game-data\", {\r\n    blocked() {\r\n      console.log(\"could not delete game database\");\r\n    },\r\n  });\r\n}\r\n","import { proxy, releaseProxy, RemoteObject, wrap } from \"comlink\";\r\n\r\nimport {\r\n  IDispatcher,\r\n  IDevToolsInteractor,\r\n  IGameController,\r\n  IRootInteractor,\r\n  IStoreInteractor,\r\n  OnEventHandler,\r\n  OnMutationHandler,\r\n} from \"@/app/interfaces\";\r\n\r\nimport {\r\n  BonfirePresenter,\r\n  EnvironmentPresenter,\r\n  NumberFormatter,\r\n  PlayerPresenter,\r\n  PresenterFacade,\r\n  ResourcesPresenter,\r\n  SciencePresenter,\r\n  SectionsPresenter,\r\n  SocietyPresenter,\r\n  StateManager,\r\n} from \"./presenters\";\r\nimport { loadOrInitGeneral } from \"./store/db\";\r\n\r\nexport type Endpoint = {\r\n  interactors: {\r\n    controller: RemoteObject<IGameController>;\r\n    devTools: RemoteObject<IDevToolsInteractor>;\r\n    dispatcher: RemoteObject<IDispatcher>;\r\n    store: RemoteObject<IStoreInteractor>;\r\n  };\r\n  presenters: {\r\n    bonfire: BonfirePresenter;\r\n    formatter: NumberFormatter;\r\n    environment: EnvironmentPresenter;\r\n    player: PlayerPresenter;\r\n    resources: ResourcesPresenter;\r\n    science: SciencePresenter;\r\n    section: SectionsPresenter;\r\n    society: SocietyPresenter;\r\n  };\r\n};\r\n\r\nlet release: () => void;\r\n\r\nexport async function Setup(): Promise<Endpoint> {\r\n  // release old proxies if they're around\r\n  release?.();\r\n\r\n  const worker = new Worker(new URL(\"./game/worker.ts\", import.meta.url));\r\n  const root = wrap<IRootInteractor>(worker);\r\n\r\n  const stateManager = new StateManager();\r\n  const onTicked: OnMutationHandler = proxy(function (changes) {\r\n    stateManager.acceptMutations(changes);\r\n  });\r\n  const onLogEvent: OnEventHandler = function (logEvents) {\r\n    stateManager.acceptEvents(logEvents);\r\n  };\r\n\r\n  const general = await loadOrInitGeneral();\r\n  await root.initialize(\r\n    proxy(onTicked),\r\n    proxy(onLogEvent),\r\n    general.currentSlot,\r\n  );\r\n\r\n  release = () => {\r\n    root[releaseProxy]();\r\n  };\r\n\r\n  const presenters = new PresenterFacade(stateManager);\r\n\r\n  return {\r\n    presenters: {\r\n      bonfire: presenters.bonfire,\r\n      environment: presenters.environment,\r\n      formatter: presenters.formatter,\r\n      player: presenters.player,\r\n      resources: presenters.resources,\r\n      science: presenters.science,\r\n      section: presenters.sections,\r\n      society: presenters.society,\r\n    },\r\n    interactors: {\r\n      controller: {\r\n        start: root.start,\r\n        stop: root.stop,\r\n      },\r\n      devTools: {\r\n        turnDevToolsOn: root.turnDevToolsOn,\r\n        turnDevToolsOff: root.turnDevToolsOff,\r\n        setGatherCatnip: root.setGatherCatnip,\r\n        setTimeAcceleration: root.setTimeAcceleration,\r\n      },\r\n      dispatcher: {\r\n        send: root.send,\r\n      },\r\n      store: {\r\n        save: root.save,\r\n      },\r\n    },\r\n  };\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, unref as _unref, createVNode as _createVNode, Suspense as _Suspense, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createStaticVNode as _createStaticVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"app-container\" }\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<header class=\\\"row\\\"><div class=\\\"col\\\"><div class=\\\"header-start d-flex gap-1 align-items-center\\\"><div>Observable Sorrow</div><div class=\\\"badge bg-success\\\"><i class=\\\"bi bi-droplet\\\"></i> β </div></div></div><div class=\\\"col\\\"><div class=\\\"header-middle\\\"></div></div><div class=\\\"col\\\"><div class=\\\"header-end\\\"></div></div></header>\", 1)\nconst _hoisted_3 = { unscrollable: \"\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loader\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"spinner-border\",\n    role: \"status\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", { class: \"visually-hidden\" }, \"Loading...\")\n  ])\n], -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"footer\", null, [\n  /*#__PURE__*/_createElementVNode(\"div\", null, [\n    /*#__PURE__*/_createTextVNode(\" Observable Sorrow is a clone of \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://kittensgame.com/web/\" }, \"Kittens Game\"),\n    /*#__PURE__*/_createTextVNode(\". \")\n  ])\n], -1)\n\nimport { defineAsyncComponent, provide, ref } from \"vue\";\r\nimport { Endpoint, Setup } from \"./app/endpoint\";\r\n\r\nimport { EndpointKey } from \"./composables/game-endpoint\";\r\nimport {\r\n  KeyboardEventsKey,\r\n  getKeyboardEvents,\r\n} from \"./composables/keyboard-events\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\r\nprovide(KeyboardEventsKey, getKeyboardEvents());\r\n\r\nlet endpoint = ref<Endpoint>();\r\nprovide(EndpointKey, endpoint);\r\n\r\nconst Main = defineAsyncComponent(async () => {\r\n  endpoint.value = await Setup();\r\n  return import(\"./components/Main.vue\");\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"main\", _hoisted_3, [\n      (_openBlock(), _createBlock(_Suspense, null, {\n        default: _withCtx(() => [\n          _createVNode(_unref(Main), { class: \"w-100 h-100\" })\n        ]),\n        fallback: _withCtx(() => [\n          _hoisted_4\n        ]),\n        _: 1\n      }))\n    ]),\n    _hoisted_5\n  ]))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { App } from \"vue\";\r\n\r\nimport VueTippy from \"vue-tippy\";\r\n\r\n// Docs for Vue 3 Tippy here: https://vue-tippy.netlify.app/\r\nfunction applyTippy<TElement>(app: App<TElement>): App<TElement> {\r\n  return app.use(VueTippy, {\r\n    component: \"tippy\",\r\n    defaultProps: {\r\n      animation: \"shift-away\",\r\n      theme: \"light\",\r\n      arrow: false,\r\n      hideOnClick: false,\r\n      duration: 150,\r\n      placement: \"right-start\",\r\n    },\r\n  });\r\n}\r\n\r\nexport default applyTippy;\r\n","import en from \"@/locales/en.json\";\r\nimport { createI18n } from \"vue-i18n\";\r\n\r\n// tslint:disable-next-line:typedef\r\nconst i18n = createI18n({\r\n  legacy: false,\r\n  locale: \"en\",\r\n  fallbackLocale: \"en\",\r\n  messages: {\r\n    en,\r\n  },\r\n});\r\n\r\nimport { App } from \"vue\";\r\nfunction applyI18n<TElement>(app: App<TElement>): App<TElement> {\r\n  app.use(i18n);\r\n  return app;\r\n}\r\n\r\nexport default applyI18n;\r\n\r\n// later: lazy loading https://vue-i18n.intlify.dev/guide/advanced/lazy.html\r\n","import { reactive } from \"vue\";\r\n\r\nexport interface DevTools {\r\n  on: boolean;\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __OS_DEVTOOLS__: DevTools;\r\n  }\r\n}\r\n\r\nexport default function applyDevTools(): void {\r\n  if (!window.__OS_DEVTOOLS__) {\r\n    window.__OS_DEVTOOLS__ = reactive({\r\n      on: process.env.NODE_ENV === \"development\",\r\n    });\r\n  }\r\n}\r\n","import \"../node_modules/bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"./styles/main.scss\";\r\n\r\nimport { App, createApp } from \"vue\";\r\n\r\nimport AppComponent from \"./App.vue\";\r\nconst app: App<Element> = createApp(AppComponent);\r\n\r\n// add vue-tippy\r\nimport applyTippy from \"./plugins/tippy\";\r\napplyTippy(app);\r\n\r\n// add vue-i18n\r\nimport applyI18n from \"./plugins/vue-i18n\";\r\napplyI18n(app);\r\n\r\n// add OS devtools\r\nimport applyDevTools from \"./plugins/devtools\";\r\napplyDevTools();\r\n\r\napp.mount(\"#app\");\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"0\":\"76edb086\",\"946\":\"13939c0b\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"observable-sorrow:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/observable-sorrow/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkobservable_sorrow\"] = self[\"webpackChunkobservable_sorrow\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1825); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["all","iterable","map","item","any","count","filter","getOrAdd","key","factory","existing","get","undefined","set","EndpointKey","Symbol","useEndpoint","fn","ep","inject","Error","value","KeyboardEventsKey","getKeyboardEvents","keys","reactive","ctrl","shift","alt","handler","event","ctrlKey","shiftKey","altKey","reset","document","visibilityState","onMounted","addEventListener","onUnmounted","removeEventListener","readonly","PresenterFacade","constructor","manager","this","bonfire","BonfirePresenter","environment","EnvironmentPresenter","log","LogPresenter","player","PlayerPresenter","resources","ResourcesPresenter","science","SciencePresenter","sections","SectionsPresenter","society","SocietyPresenter","formatter","NumberFormatter","precision","units","Map","TrueFn","_","iterator","Enumerable","toArray","Array","from","toMap","keySelector","valueSelector","i","selector","that","flatMap","outer","inner","first","take","taken","defined","reduce","seed","accumulator","accumulate","source","asEnumerable","Meta","bonfireItems","BonfireItems","buildings","Object","values","BuildingMetadata","building","id","effectDisplay","EffectDisplayStyles","jobs","JobMetadata","job","recipes","RecipeMetadata","ResourceMetadata","resource","season","SeasonsMetadata","SectionsMetadata","section","techs","TechMetadata","tech","weather","WeatherMetadata","label","description","flavor","prices","ratio","base","catnip","unlock","priceRatio","effects","per","total","hut","wood","library","barn","unlockEffect","mine","ingredients","products","UnitKind","perTick","percent","invert","noUnit","disposition","unit","None","PerTick","Percent","spring","summer","autumn","winter","neutral","warm","cold","woodcutter","farmer","scholar","hunter","miner","UnlockMode","delta","limit","minerals","catpower","kittens","unlockMode","FirstCapacity","parent","management","technologies","calendar","dependsOn","agriculture","archery","mining","effectTree","nodes","computed","collectEffectNodes","children","child","style","numberView","round","num","rounded","Math","scale","pow","scaledNumber","epsilonCorrected","Number","EPSILON","divisor","postfix","scales","getSignString","showSign","sign","getValueString","isFinite","valueString","isInteger","toFixed","SandcastleBuilderFormatter","signString","absValue","abs","POSITIVE_INFINITY","toString","number","fulfillment","state","resourceId","requirement","fulfilled","fulfillmentTime","capped","ingredient","Tick","meta","newBonfireItem","gatherCatnip","refineCatnip","buyBuilding","intent","kind","unlocked","recipe","level","buildingId","singleAmount","totalAmount","newCalendar","day","year","calendarLabel","epochLabel","seasonLabel","weatherLabel","showObserveSky","stockpile","amount","options","v","fmt","view","tps","time","millisPerTick","history","subscribe","events","dispatchEvent","CustomEvent","detail","eventId","resolve","t","named","prototype","hasOwnProperty","call","element","plural","timeAcceleration","newResource","res","change","resourceChange","kittensChange","capacity","modifier","deltaTree","items","newTechItem","staticData","researched","newSectionItem","topLevelSections","parentId","alert","pops","newPopItem","newJobItem","happiness","allowSendHunters","s","Channel","customRef","track","trigger","push","splice","watchSyncEffect","pull","MutationPools","ensure","fulfillments","numbers","stockpiles","EventPools","StateManager","pools","acceptMutations","mutations","pool","poolId","added","updated","updateObject","removed","delete","acceptEvents","channel","entries","src","dst","mergeWith","dstValue","srcValue","dstObj","async","migrateV1","database","_transaction","v1","createObjectStore","autoIncrement","migrateV2","_database","migrateV3","tx","saves","objectStore","cursor","openCursor","save","update","continue","migrateV4","transaction","migrateV5","migrateV6","DatabaseName","LatestVersion","migrations","version","run","migrate","db","oldVersion","newVersion","range","m","migration","openStore","openDB","loadOrInitGeneral","general","store","put","done","release","Setup","worker","Worker","URL","root","wrap","stateManager","onTicked","proxy","changes","onLogEvent","logEvents","initialize","currentSlot","releaseProxy","presenters","interactors","controller","start","stop","devTools","turnDevToolsOn","turnDevToolsOff","setGatherCatnip","setTimeAcceleration","dispatcher","send","_hoisted_1","class","_hoisted_2","_createStaticVNode","_hoisted_3","unscrollable","_hoisted_4","_createElementVNode","role","_hoisted_5","_createTextVNode","href","_defineComponent","setup","__props","provide","endpoint","ref","Main","defineAsyncComponent","_ctx","_cache","_openBlock","_createElementBlock","_createBlock","_Suspense","default","_withCtx","_createVNode","_unref","fallback","__exports__","applyTippy","app","use","VueTippy","component","defaultProps","animation","theme","arrow","hideOnClick","duration","placement","i18n","createI18n","legacy","locale","fallbackLocale","messages","en","applyI18n","applyDevTools","window","__OS_DEVTOOLS__","on","process","createApp","AppComponent","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","length","j","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","e","chunkId","Promise","promises","u","miniCssF","g","globalThis","Function","obj","prop","inProgress","dataWebpackPrefix","l","url","script","needAttach","scripts","getElementsByTagName","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","setTimeout","bind","type","target","head","appendChild","toStringTag","nmd","paths","p","b","baseURI","self","location","installedChunks","installedChunkData","promise","reject","error","loadingEnded","errorType","realSrc","message","name","request","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}